{
   "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
   "version": "2.1.0",
   "runs": [
      {
         "results": [
            {
               "ruleId": "COPY_PASTE_ERROR",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 7159
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "479d55b0771835991c5449ecc0cb70f93d9ed544bc32582b7404aa713cdf2992"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10240)\n\"column\" in \"cursor.column\" looks like a copy-paste error.\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Should it say \"row\" instead?"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7156
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: original: \"cursor.column\" looks like the original copy."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7159
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: copy_paste_error: \"column\" in \"cursor.column\" looks like a copy-paste error."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        },
                        "region": {
                           "startLine": 60
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e3382a641324ef62498bdb2459d8b7ea4401947d94e8b90b8c37a030358e0bbf"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10170)\n\"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"injectableQueryIntegrity\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 75
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: requires_protection: Calling \"log\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                        },
                        "region": {
                           "startLine": 62
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a274138ba1e57e91bf5b8b822188bfa2eeb37e765ad01f902856114c1359dcbb"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10218)\n\"org.owasp.webgoat.webwolf.mailbox.MailboxController.sendEmail\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.webwolf.mailbox.MailboxController.sendEmail\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"save\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                        },
                        "region": {
                           "startLine": 70
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "38fdda7dde6f941340db358f180b293a3a0e39d81976970ea073dc474e28e7bb"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10233)\n\"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"createUser\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: requires_protection: Calling \"execute\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                        },
                        "region": {
                           "startLine": 68
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "d98c6cb136d72ddfc00960b8c4878dfb838b313a0fed997568cfdf86a4f1c3da"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10154)\n\"org.owasp.webgoat.webwolf.mailbox.MailboxController.deleteAllMail\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.webwolf.mailbox.MailboxController.deleteAllMail\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"deleteAll\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java"
                        },
                        "region": {
                           "startLine": 34
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "56a8355fae9c1b66a4666c59f9e3c13e8ff90609ac8d92c60057f5115e91459d"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10261)\n\"org.owasp.webgoat.container.users.RegistrationController.registration\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java"
                                       },
                                       "region": {
                                          "startLine": 34
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.container.users.RegistrationController.registration\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"bindingResult.hasErrors()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java"
                                       },
                                       "region": {
                                          "startLine": 44
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: requires_protection: Calling \"addUser\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/UserService.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: requires_protection: Calling \"save\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java"
                        },
                        "region": {
                           "startLine": 54
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "5004f9f490da0b21245fd636c261193c19416d69d7861cdbda7217a3ceff8e1a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10226)\n\"org.owasp.webgoat.container.service.RestartLessonService.restartLesson\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.container.service.RestartLessonService.restartLesson\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"save\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "DEADCODE",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                        },
                        "region": {
                           "startLine": 344
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "12387abf1485987af12abdced86f2f6f6ce1be360d99da05dead24fb6a165515"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10149)\nExecution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(el...\".\n[CWE-561](https://cwe.mitre.org/data/definitions/561.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                                       },
                                       "region": {
                                          "startLine": 344
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_condition: The condition \"[\"insertBefore\", \"appendChild\", \"cloneNode\"]\" must be true."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                                       },
                                       "region": {
                                          "startLine": 344
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_line: Execution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(el...\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "DEADCODE",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                        },
                        "region": {
                           "startLine": 355
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "89fceed01b7847a1622e796bdf165b45506f2ffd24249fc86b2a7fffe1fa7e1a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10149)\nExecution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(te...\".\n[CWE-561](https://cwe.mitre.org/data/definitions/561.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                                       },
                                       "region": {
                                          "startLine": 355
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_condition: The condition \"[\"splitText\", \"deleteData\", \"insertData\", \"appendData\", \"cloneNode\"]\" must be true."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"
                                       },
                                       "region": {
                                          "startLine": 355
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_line: Execution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(te...\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "DOM_XSS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                        },
                        "region": {
                           "startLine": 1
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "dcb067db7669cd6e8afaa07c7d926d742c6b84ad4a47b072f8646eb2b1aec951"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10173)\nCalling at a later point \"<anonymous>\". This call uses \"result\" for sensitive computation.\n[CWE-79](https://cwe.mitre.org/data/definitions/79.html)\nRemediation Advice: The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability.\n* HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided.\n* JavaScript code execution: Validate any untrusted data against a whitelist so it's not possible for an attacker to have its supplied code executing.\n* URL manipulation: Make sure the scheme is whitelisted and doesn't allow for the injection of a URL like: \"data:text/html;,<img/src/onerror=alert(1)>\".\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                                       },
                                       "region": {
                                          "startLine": 1
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: event_handler: Calling at a later point \"follow\". This call registers an event handler (through \"$.ajax({\"type\" : \"POST\", \"url\"...\")."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                                       },
                                       "region": {
                                          "startLine": 2
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: event_handler: Calling the function \"$.ajax({\"type\" : \"POST\", \"url\" : \"JWT/final/follow/\" + user}).then\" registers each of its arguments as an event handler."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                                       },
                                       "region": {
                                          "startLine": 5
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: Parameter \"result\" is tainted when the callback function is called."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                                       },
                                       "region": {
                                          "startLine": 1
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling at a later point \"<anonymous>\". This call uses \"result\" for sensitive computation."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                                       },
                                       "region": {
                                          "startLine": 6
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: type: \"$(\"#toast\")\" returns an object of type \"JQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                                       },
                                       "region": {
                                          "startLine": 6
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: pass: Passing \"result\" to \"$(\"#toast\").append\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/lessons/jwt/js/jwt-final.js"
                                       },
                                       "region": {
                                          "startLine": 6
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: dom_xss_sink: Calling \"$(\"#toast\").append\" with the tainted value in any argument. This allows a cross-site scripting attack: an attacker can execute arbitrary JavaScript code in another user's web browser."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "FORWARD_NULL",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java"
                        },
                        "region": {
                           "startLine": 88
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3512c35f23e42da7a05b0ea4c53e1e808bb9c01f2dfccc3093cc6fef6198bdf9"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10271)\nPassing null pointer \"resource\" to \"String\", which dereferences it.\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"resource == null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_compare_op: Comparing \"resource\" to null implies that \"resource\" might be null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: throw: Throwing \"java.io.IOException\" (or subclass) from call to \"readAllBytes\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java"
                                       },
                                       "region": {
                                          "startLine": 83
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: catch: Catching exception."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: var_deref_model: Passing null pointer \"resource\" to \"String\", which dereferences it."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                        },
                        "region": {
                           "startLine": 52
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "935cfa27348b6e380360e6c106553de2e54c6e00c834695cc7d433da40fe373e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10260)\nCalling \"WebGoatUser\". This call uses the constant string as a password.\n[CWE-259](https://cwe.mitre.org/data/definitions/259.html)\nRemediation Advice: Passwords should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"password\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 33
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                        },
                        "region": {
                           "startLine": 73
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "d0d6fe0498bb91dd80a52dd7c1c51360c0d7cfc4e18f7fb6c6be7c275aae81ca"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10148)\nCalling \"addUser\". This call uses the constant string as a password. (The virtual call resolves to \"org.owasp.webgoat.webwolf.user.UserService.addUser(java.lang.String, java.lang.String)\".)\n[CWE-259](https://cwe.mitre.org/data/definitions/259.html)\nRemediation Advice: Passwords should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"guest\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: assign: Assigning: \"password\" = \"\"guest\"\". Now \"password\" is equal to \"guest\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                                       },
                                       "region": {
                                          "startLine": 73
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: password_use: Calling \"addUser\". This call uses the constant string as a password. (The virtual call resolves to \"org.owasp.webgoat.webwolf.user.UserService.addUser(java.lang.String, java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/user/UserService.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                        },
                        "region": {
                           "startLine": 139
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "69fe3b3f3851a528ed824ba19fde8dc279ec5e41790b792dbd596d37c33d9679"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10278)\nCalling \"PKCS8EncodedKeySpec\". This call uses the constant string as a cryptographic key.\n[CWE-321](https://cwe.mitre.org/data/definitions/321.html)\nRemediation Advice: Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 133
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 133
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: identity: Calling \"replace\". This call assigns \"\"\"\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 133
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: assign: Assigning: \"privateKeyPem\" = \"privateKeyPem.replace(\"-----BEGIN PRIVATE KEY-----\", \"\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 134
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: identity: Calling \"replace\". This call assigns \"privateKeyPem\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 134
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: assign: Assigning: \"privateKeyPem\" = \"privateKeyPem.replace(\"-----END PRIVATE KEY-----\", \"\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 135
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: identity: Calling \"replace\". This call assigns \"privateKeyPem\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 135
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: identity: Calling \"replace\". This call assigns \"privateKeyPem.replace(\"\\n\", \"\")\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 135
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: assign: Assigning: \"privateKeyPem\" = \"privateKeyPem.replace(\"\\n\", \"\").replace(\"\\r\", \"\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 137
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: identity: Calling \"decode\". This call assigns \"privateKeyPem\" to \"<return value>\". (The virtual call resolves to \"java.util.Base64.Decoder.decode(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 137
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 10: assign: Assigning: \"decoded\" = \"java.util.Base64.getDecoder().decode(privateKeyPem)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 139
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 11: crypto_use: Calling \"PKCS8EncodedKeySpec\". This call uses the constant string as a cryptographic key."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 107
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "7c4e4371da2ae573104d119cffa83b88e2236f5331e05f4856bf365b191f29a5"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10191)\nCalling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)\n[CWE-321](https://cwe.mitre.org/data/definitions/321.html)\nRemediation Advice: Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 107
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"bm5n3SkxCX4kKRy4\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 107
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: crypto_use: Calling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                        },
                        "region": {
                           "startLine": 50
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ff5e79c96b8882211e992521335218f85f64b43cef2117bbe5a6ab073ec73f3f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10197)\nCalling \"WebGoatUser\". This call uses the constant string as a password.\n[CWE-259](https://cwe.mitre.org/data/definitions/259.html)\nRemediation Advice: Passwords should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"123\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: assign: Assigning: \"password\" = \"\"123\"\". Now \"password\" is equal to \"123\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/webwolf/user/UserServiceTest.java"
                                       },
                                       "region": {
                                          "startLine": 50
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/user/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: assign: Assigning: \"this.password\" = \"password\". Now \"this.password\" is equal to \"password\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/user/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: password_use: Calling \"createUser\". This call uses the constant string as a password. (The virtual call resolves to \"org.owasp.webgoat.webwolf.user.WebGoatUser.createUser()\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 144
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ac226cf8161e5542df31bcccef2cf8a300b3d3c776a42f7800bcd728a49ead62"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10230)\nCalling at a later point \"getVotes\". This call uses the constant string as a cryptographic key.\n[CWE-321](https://cwe.mitre.org/data/definitions/321.html)\nRemediation Advice: Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: identity: Calling at a later point \"<clinit>\". This call assigns \"victory\" to \"JWT_PASSWORD\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: hardcoded_credential: The constant string \"\"victory\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: identity: Calling \"encode\". This call assigns \"\"victory\"\" to \"<return value>\". (The virtual call resolves to \"io.jsonwebtoken.impl.TextCodec.encode(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: identity_trivial: Calling at a later point \"<clinit>\". This call assigns a reference to \"JWT_PASSWORD\" to \"JWT_PASSWORD\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: identity_trivial: Calling \"encode\". This call returns a reference to \"<return value>\". (The virtual call resolves to \"io.jsonwebtoken.impl.TextCodec.encode(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: assign: Assigning: \"org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.JWT_PASSWORD\" = \"io.jsonwebtoken.impl.TextCodec.BASE64.encode(\"victory\")\". Now \"JWT_PASSWORD\" is equal to a reference to \"<heap-allocated-area>\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 144
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: crypto_use: Calling at a later point \"getVotes\". This call uses the constant string as a cryptographic key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 155
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: crypto_use: Calling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HIBERNATE_BAD_HASHCODE",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java"
                        },
                        "region": {
                           "startLine": 39
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "fd6876a49d2b411274fab8ad87940803b4a490d6429efb98938af7d386ec10e3"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10236)\nResult depends on \"org.owasp.webgoat.container.lessons.Assignment.getId()\", which is a Hibernate identifier.\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java"
                                       },
                                       "region": {
                                          "startLine": 45
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: annotated_id_member: Member \"id\" is annotated with \"@javax.persistence.Id\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/session/LessonTrackerTest.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: new_transient: Constructing new transient instance \"a1\" of entity type \"org.owasp.webgoat.container.lessons.Assignment\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java"
                                       },
                                       "region": {
                                          "startLine": 39
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: bad_hashcode: Result depends on \"org.owasp.webgoat.container.lessons.Assignment.getId()\", which is a Hibernate identifier."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/session/LessonTrackerTest.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: hashed_collection_access: Accessing a collection that calls \"equals\" and \"hashCode\" on \"a1\" before its Hibernate identifier has been set."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "INSECURE_COMMUNICATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                        },
                        "region": {
                           "startLine": 51
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4920bdadbb257ad8f37fe94647f661de0857181215c7af82a860473dbde2aab4"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10161)\nCommunicating over an insecure channel.\n[CWE-319](https://cwe.mitre.org/data/definitions/319.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: protocol: Using an unencrypted HTTP connection."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_true: Condition \"url.matches(\"http://ifconfig\\\\.pro\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: use: Communicating over an insecure channel."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "INSECURE_RANDOM",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                        },
                        "region": {
                           "startLine": 91
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "821ce980cb1ab2e94f4116e40cbeb1afbdbd6c7117e2be4302b8256e97fa9e40"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10155)\nCalling \"File\". The random value \"((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\"\" was generated using a cryptographically insecure pseudo-random number generator and is used in a security-sensitive context. An attacker may be able to predict the values generated by such a PRNG and gain access to sensitive information.\n[CWE-330](https://cwe.mitre.org/data/definitions/330.html)\nRemediation Advice: Use a cryptographically secure PRNG implementation such as \"java.security.SecureRandom\" to generate random values for security-sensitive contexts."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 83
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"getProfilePicture\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint: Calling \"nextInt\". Reading data from an insecure random value, which is considered tainted"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"(id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: insecure_random_used: Calling \"File\". The random value \"((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\"\" was generated using a cryptographically insecure pseudo-random number generator and is used in a security-sensitive context. An attacker may be able to predict the values generated by such a PRNG and gain access to sensitive information."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "MISSING_BREAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 6785
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "cfa4c12c286e19beab77f28730fc310642b40a54cb0d3a16a88f6865b983e114"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10256)\nThe case for \"this.$behaviours\" is not terminated by a \"break\" statement.\n[CWE-484](https://cwe.mitre.org/data/definitions/484.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6785
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unterminated_case: The case for \"this.$behaviours\" is not terminated by a \"break\" statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6787
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: fallthrough: The above case falls through to this one."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 11090
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "b059d51ae6bb02131ab8adb5167908491812e3b6ce72fd6a8b6ff06fcb3e20e5"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10198)\nReading variable \"split\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 11090
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Reading variable \"split\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 11080
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "9f2cdbab198e90ba4a2c390648bb15c5bc0ec4e8a8d676e28b72948be924c230"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10198)\nReading variable \"split\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 11080
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Reading variable \"split\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 9117
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ed725ac1f661c03a8ef4200c79f31555b5d79b978a8a8b840a78ca200f9a4380"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10242)\nReading variable \"i\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9117
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 8534
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "2a38784e2fb7ee30ce3c532d24c16bd8ba548b20aca5b91822621dcd7d3606ed"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10210)\nReading variable \"i\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 8534
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 4315
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "b51cc263441966dfdc182a5bb963a24f06a685ce0ab70b936bf7e36928506134"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10262)\nDiscarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 4315
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Discarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 4440
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "040c0d2ba0ced32662dbe6b16805ca1b127c9a3b940a0db306907fc276d36ed3"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10262)\nDiscarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 4440
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Discarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 15272
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "cb5006648b49225e59353074b54ed7ae520f82818249852cf500c6b339e20973"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10253)\nDiscarding the result of operator \"==\" in \"point.bias == -1\". What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Did you intend to make an assertion or assignment?"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 15272
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Discarding the result of operator \"==\" in \"point.bias == -1\". What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 9100
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e80b0b3601681639008f696735c49c32778f39d468a820985a7ef0c16a430cb7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10174)\nReading variable \"i\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9100
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/goatApp/view/PaginationControlView.js"
                        },
                        "region": {
                           "startLine": 147
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "08b0f06fc9cc91268f2c36f7edde9070c8fab40911df647039f06e442a819240"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10245)\nAccessing data with \"this.showPrevPageButton\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/goatApp/view/PaginationControlView.js"
                                       },
                                       "region": {
                                          "startLine": 147
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Accessing data with \"this.showPrevPageButton\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"
                        },
                        "region": {
                           "startLine": 290
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "24cba22a139152f14ed5a16e0b1b9b5da53ebaa5b1279eb5ab72f77e46f4142c"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10188)\nAccessing data with \"this.element\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"
                                       },
                                       "region": {
                                          "startLine": 290
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Accessing data with \"this.element\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                        },
                        "region": {
                           "startLine": 42
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "568969ed141372cecac54569cc334a083ff6608b108a1ff9a58dc061783e5409"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10201)\nCalling a method on null object \"errors.getFieldError(\"matchingPassword\")\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"getFieldError\" returns \"null\" (checked 0 out of 2 times). (The virtual call resolves to \"org.springframework.validation.AbstractBindingResult.getFieldError\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: null_method_call: Calling a method on null object \"errors.getFieldError(\"matchingPassword\")\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 9502
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "0213ddd39bb4e99971aa5cbc0a954e19fb5b57a07ab733b304a6cae18e63b75b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10185)\nAccessing a property of null-like value \"token\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9467
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"token\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9834
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7481
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9475
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 14569
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13413
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9467
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_true: Condition \"/^comment|string/.test(type)\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9833
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 1 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7473
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 2 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9474
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 3 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 14571
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13431
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_assign: Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9469
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: cond_true: Condition \"type == \"comment\"\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13434
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: example_checked: Example 5 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9473
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"dir != 1\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9474
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_false: Condition \"token\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9485
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_true: Condition \"dir != -1\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9489
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: cond_true: Condition \"lastRow == -1\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9491
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: cond_true: Condition \"!re.test(state)\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9493
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: if_fallthrough: Falling through to end of if statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9487
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 10: cond_false: Condition \"token\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9497
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 11: returned_null: \"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6852
                                       }
                                    },
                                    "message": {
                                       "text": "Event #11.1: cond_true: Condition \"this.$tokenIndex < 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6854
                                       }
                                    },
                                    "message": {
                                       "text": "Event #11.2: cond_true: Condition \"this.$row < 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6856
                                       }
                                    },
                                    "message": {
                                       "text": "Event #11.3: return: Explicitly returning \"null\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9497
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 12: var_assigned: Assigning \"token\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9498
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 13: if_fallthrough: Falling through to end of if statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9502
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 14: property_access: Accessing a property of null-like value \"token\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/text.js"
                        },
                        "region": {
                           "startLine": 270
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "37c3338939f4835ff63a8e2fdf110a01dc8086e6feedbdccc06f0a01b6c52102"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10177)\nAccessing a property of null-like value \"xhr\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 269
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"text.createXhr\" returns \"null\" or \"undefined\" (checked 1 out of 2 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: assign: Assigning: \"xhr\" = \"undefined\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: cond_false: Condition \"typeof XMLHttpRequest !== \"undefined\"\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.3: cond_false: Condition \"typeof ActiveXObject !== \"undefined\"\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.4: return: Returning \"xhr\", which is \"null\" or \"undefined\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 266
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_checked: Example 1: \"text.createXhr()\" has its value checked in \"(masterConfig.env === \"xhr\") || (!masterConfig.env && text.createXhr())\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 269
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assigned: Assigning \"xhr\" to the \"null\" or \"undefined\" return value from \"text.createXhr\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/text.js"
                                       },
                                       "region": {
                                          "startLine": 270
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: property_access: Accessing a property of null-like value \"xhr\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                        },
                        "region": {
                           "startLine": 180
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e2f687a4d28505c0518e0031096d6a187d6c0ee1f0106212d7a94e870dfbfe38"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10270)\nCalling a method on null object \"propsLang\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 178
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"getProperties\" returns \"null\" (checked 0 out of 2 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 158
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: null_assign: Assigning: \"prop\" = null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 159
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: cond_false: Condition \"lang == null\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 159
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.3: cond_true: Condition \"lang.equals(\"\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 161
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.4: if_fallthrough: Falling through to end of if statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 164
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.5: throw: Throwing \"java.io.FileNotFoundException\" (or subclass) from call to \"FileInputStream\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 170
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.6: catch: Catching exception."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 173
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.7: return_null_var: Returning \"prop\", which is null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 178
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assigned: Assigning: \"propsLang\" = \"null\" return value from \"getProperties\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 180
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: null_method_call: Calling a method on null object \"propsLang\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "PATH_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                        },
                        "region": {
                           "startLine": 39
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "87f180112e14877fac40aa14b354dceb37d7bd137627acb46d7be4c2c54cdb02"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10265)\nCalling \"execute\". This call uses \"(fullName != null) ? fullName.replace(\"../\", \"\") : \"\"\" for sensitive computation.\n[CWE-22](https://cwe.mitre.org/data/definitions/22.html)\nRemediation Advice: Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                                       },
                                       "region": {
                                          "startLine": 36
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"uploadFileHandler\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                                       },
                                       "region": {
                                          "startLine": 36
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"fullName\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                                       },
                                       "region": {
                                          "startLine": 39
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: identity: Calling \"replace\". This call assigns \"fullName\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                                       },
                                       "region": {
                                          "startLine": 39
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sink: Calling \"execute\". This call uses \"(fullName != null) ? fullName.replace(\"../\", \"\") : \"\"\" for sensitive computation."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.1: pass: Passing \"fullName\" to \"File\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.2: path_manipulation_sink: Constructing a path or URI using the tainted value in \"fullName\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "PATH_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                        },
                        "region": {
                           "startLine": 91
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3c4b3bab941de6cd14434f40898a792f54cfcb7843bdda79f8a563bef5fd8e3f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10213)\nConstructing a path or URI using the tainted value in \"((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\"\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files.\n[CWE-22](https://cwe.mitre.org/data/definitions/22.html)\nRemediation Advice: Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 83
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"getProfilePicture\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 90
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint: Calling \"getParameter\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"javax.servlet.ServletRequest.getParameter(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 90
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: assign: Assigning: \"id\" = \"request.getParameter(\"id\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: concat: Creating a tainted string using \"(id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: pass: Passing \"((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\"\" to \"File\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: path_manipulation_sink: Constructing a path or URI using the tainted value in \"((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\"\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "PATH_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java"
                        },
                        "region": {
                           "startLine": 36
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a15167e7b88b4a047b42a6c2b07d978c80b57b207a6ba598ab0ecee3ef52a550"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10238)\nCalling \"execute\". This call uses \"file.getOriginalFilename()\" for sensitive computation.\n[CWE-22](https://cwe.mitre.org/data/definitions/22.html)\nRemediation Advice: Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java"
                                       },
                                       "region": {
                                          "startLine": 34
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"uploadFileHandler\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java"
                                       },
                                       "region": {
                                          "startLine": 36
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint: Calling \"getOriginalFilename\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"org.springframework.mock.web.MockMultipartFile.getOriginalFilename()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java"
                                       },
                                       "region": {
                                          "startLine": 36
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"execute\". This call uses \"file.getOriginalFilename()\" for sensitive computation."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: pass: Passing \"fullName\" to \"File\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: path_manipulation_sink: Constructing a path or URI using the tainted value in \"fullName\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "REGEX_CONFUSION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/lessons/Lesson.java"
                        },
                        "region": {
                           "startLine": 122
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "2bcd7c91d29febc48aeeb6468ce7818661d1fcc67c85217f6bcf69ff5de0d9eb"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10259)\nThe \".\" character(s) in the pattern \"\"org.owasp.webgoat.lessons.\"\" can match any character, because calls to \"replaceAll\" treat the pattern as a regular expression, which might be unexpected.\n[CWE-185](https://cwe.mitre.org/data/definitions/185.html)\nRemediation Advice: To replace all occurrences of the literal string, use \"replace\" instead of \"replaceAll\"."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/lessons/Lesson.java"
                                       },
                                       "region": {
                                          "startLine": 122
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: regex_expected: The \".\" character(s) in the pattern \"\"org.owasp.webgoat.lessons.\"\" can match any character, because calls to \"replaceAll\" treat the pattern as a regular expression, which might be unexpected."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5Test.java"
                        },
                        "region": {
                           "startLine": 43
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e830631907038b458875200f5a0915df663427cfe98c7796a25b85dec65267e5"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10216)\nFailing to save or close JDBC connection open by \"dataSource.getConnection()\" leaks it.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5Test.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: jdbc_fn: An open JDBC connection is returned from \"getConnection\". [Note: The source code implementation of the function has been overridden by a builtin model.]"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5Test.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: noescape: Resource \"dataSource.getConnection()\" is not closed or saved in \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5Test.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: leaked_connection: Failing to save or close JDBC connection open by \"dataSource.getConnection()\" leaks it."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                        },
                        "region": {
                           "startLine": 103
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6145a3e23a4dba027b6574fde5b947ff69bf86bf1ff2dc2ca9372a76366673f1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10195)\nVariable \"stmt\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 96
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 96
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"stmt\" = resource returned from \"connection.prepareStatement(\"SELECT * FROM INFORMATION_SCHEMA.TABLE_PRIVILEGES WHERE TABLE_NAME = ? AND GRANTEE = ?\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 100
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"stmt\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: noescape: Resource \"stmt\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 102
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: noescape: Resource \"stmt\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 103
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: leaked_resource: Variable \"stmt\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                        },
                        "region": {
                           "startLine": 76
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "15938985481177f84a8ff1e10d3a070871df5dada0d3b69e7562f2a7cc57193f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10199)\nVariable \"is\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"entries.hasMoreElements()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: alloc_fn: A new resource is returned from allocation method \"getInputStream\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: var_assign: Assigning: \"is\" = resource returned from \"zip.getInputStream(e)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 75
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: noescape: Resource \"is\" is not closed or saved in \"copy\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"is\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"
                        },
                        "region": {
                           "startLine": 86
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "eb600b4b34a39e184eb65c2801ed71ed47021417a2f4655db903922ad2fdf234"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10153)\nFailing to save or close resource created by \"connection.createStatement()\" leaks it.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: noescape: Resource \"connection.createStatement()\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: leaked_resource: Failing to save or close resource created by \"connection.createStatement()\" leaks it."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                        },
                        "region": {
                           "startLine": 87
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "51291d4f5b596c2a3976e56ae954b6899ce54865322217afedf7ae0316ad8bc4"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10202)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 73
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_false: Condition \"results.getStatement() != null\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_false: Condition \"tableExists(connection)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 87
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                        },
                        "region": {
                           "startLine": 76
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ee3338f0d27cd5dc63d1e42b4821a835efc45daf7f4d743cf0161bbb1c221127"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10202)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 73
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getStatement() != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                        },
                        "region": {
                           "startLine": 70
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "7c4c9a692fb64bf17eda6960692b03751538618288b33f3ccf8243e071211894"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10156)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: start: Starting defect path here."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"!\"Larry\".equals(username_login)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: var_assign: Assigning: \"statement\" = resource returned from \"connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_false: Condition \"resultSet.next()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                        },
                        "region": {
                           "startLine": 68
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "93153c75587afc0c01b1acf4a9ef049a797a4710753e6f41d6cd8a4f7c861dfe"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10156)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: start: Starting defect path here."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"!\"Larry\".equals(username_login)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: var_assign: Assigning: \"statement\" = resource returned from \"connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_true: Condition \"resultSet.next()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                        },
                        "region": {
                           "startLine": 70
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "70af18c1662356c8ae65c2f864ae56e8adf4dfc31d385cd92a83dba70b5b2811"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10204)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"results.first()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                        },
                        "region": {
                           "startLine": 74
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "9cd61c2cff81526daf47a9e85a2aa0895c9b8c14b1e3a7ac5a06a4ab199017fb"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10178)\nVariable \"checkStatement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"checkStatement\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"checkStatement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_false: Condition \"results.getString(\"department\").equals(\"Sales\")\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"checkStatement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                        },
                        "region": {
                           "startLine": 72
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "22ddd23b4ff6c7cda5971ed4a9c03cf31b49f3fd8e548ae47ee959950194dad8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10178)\nVariable \"checkStatement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"checkStatement\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"checkStatement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getString(\"department\").equals(\"Sales\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 72
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"checkStatement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"
                        },
                        "region": {
                           "startLine": 65
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "7f2d7a9c974794708f2baa29b74ae36882fcd566a349fd60ded632b70d2a69f7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10160)\nFailing to save or close resource created by \"new java.io.FileOutputStream(new java.io.File(targetDirectory, \"employees.xml\"))\" leaks it.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"!targetDirectory.exists()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: new_resource: \"new java.io.FileOutputStream(new java.io.File(targetDirectory, \"employees.xml\"))\" creates a new resource."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"new java.io.FileOutputStream(new java.io.File(targetDirectory, \"employees.xml\"))\" is not closed or saved in \"copy\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: leaked_resource: Failing to save or close resource created by \"new java.io.FileOutputStream(new java.io.File(targetDirectory, \"employees.xml\"))\" leaks it."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                        },
                        "region": {
                           "startLine": 67
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f6e711971248a54c7fcf784cf012a81818369f91bd07b3d2468c96008021395e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10258)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.prepareStatement(\"select password from sql_challenge_users where userid = ? and password = ?\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: noescape: Resource \"statement\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_false: Condition \"resultSet.next()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                        },
                        "region": {
                           "startLine": 63
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "423307410854dba9865a47761209ea494e817449d45b0a0bdde70929d4141bd1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10258)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.prepareStatement(\"select password from sql_challenge_users where userid = ? and password = ?\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: noescape: Resource \"statement\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_true: Condition \"resultSet.next()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: cond_false: Condition \"\"tom\".equals(username_login)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                        },
                        "region": {
                           "startLine": 117
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "eef462d4731e029edd28e35c089495726171e40bf47c65d0af7644b4fce6347b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10272)\nVariable \"stmt\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 113
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 113
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"stmt\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 115
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"stmt\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 117
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"cols > 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 117
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"stmt\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                        },
                        "region": {
                           "startLine": 120
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "717788bbcaeca1939ca9aa4180edf14053fc9ede8e14d23177c2681866d01aa8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10167)\nVariable \"inputStream\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 119
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"getResourceAsStream\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 119
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"inputStream\" = resource returned from \"getClass().getResourceAsStream(\"/images/account.png\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 120
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"inputStream\" is not closed or saved in \"copyToByteArray\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 120
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: leaked_resource: Variable \"inputStream\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/container/users/UserRepositoryTest.java"
                        },
                        "region": {
                           "startLine": 18
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "084a6e0893e9414e6d102762cae9d6dce2749abd73f9b3f0a85d1c52c5f02970"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10243)\nCalling \"saveAndFlush\". This stores the sensitive data \"user\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.jpa.repository.JpaRepository.saveAndFlush(java.lang.Object)\".)\n[CWE-313](https://cwe.mitre.org/data/definitions/313.html)\nRemediation Advice: Do not leak this data to a database."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserRepositoryTest.java"
                                       },
                                       "region": {
                                          "startLine": 17
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: sensitive_data: Calling \"WebGoatUser\". This call stores sensitive data in \"\"password\"\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 33
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: sensitive_data: Calling \"WebGoatUser\". This call stores sensitive data in \"password\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserRepositoryTest.java"
                                       },
                                       "region": {
                                          "startLine": 17
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: assign: Assigning: \"user\" = \"new org.owasp.webgoat.container.users.WebGoatUser(\"test\", \"password\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserRepositoryTest.java"
                                       },
                                       "region": {
                                          "startLine": 18
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"saveAndFlush\". This stores the sensitive data \"user\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.jpa.repository.JpaRepository.saveAndFlush(java.lang.Object)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/users/UserService.java"
                        },
                        "region": {
                           "startLine": 42
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "91ca0fe4ee4080dd203fb2619eb0b1c2ebdbc9d0b1ba7bc189d9f76c29ff3bf1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10234)\nCalling \"save\". This stores the sensitive data \"new org.owasp.webgoat.container.users.WebGoatUser(username, password)\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.repository.CrudRepository.save(java.lang.Object)\".)\n[CWE-313](https://cwe.mitre.org/data/definitions/313.html)\nRemediation Advice: Do not leak this data to a database."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/UserService.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: sensitive_data: Calling \"WebGoatUser\". This call stores sensitive data in \"password\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 33
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: sensitive_data: Calling \"WebGoatUser\". This call stores sensitive data in \"password\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/UserService.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sink: Calling \"save\". This stores the sensitive data \"new org.owasp.webgoat.container.users.WebGoatUser(username, password)\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.repository.CrudRepository.save(java.lang.Object)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 112
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c6d220fa95c54e6bad348efd2770b110f587f1030380639e7a36da237c7c2e13"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10249)\nCalling \"ok\". This shows the sensitive data \"success(this).feedback(\"jwt-refresh-alg-none\").build()\" in a user interface. It may be exposed to unintended individuals.\n[CWE-317](https://cwe.mitre.org/data/definitions/317.html)\nRemediation Advice: Do not leak this data to a user interface."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"checkout\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 112
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sensitive_data: Calling \"build\". This call stores sensitive data in \"(<return value>).assignment\". (The virtual call resolves to \"org.owasp.webgoat.container.assignments.AttackResult.AttackResultBuilder.build()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: sensitive_data: Calling \"getSimpleName\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"java.lang.Class.getSimpleName()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: return: Returning \"new org.owasp.webgoat.container.assignments.AttackResult(lessonCompleted, messages.getMessage(feedbackResourceBundleKey, feedbackArgs), messages.getMessage(output, output, outputArgs), assignment.getClass().getSimpleName(), attemptWasMade)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 112
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"ok\". This shows the sensitive data \"success(this).feedback(\"jwt-refresh-alg-none\").build()\" in a user interface. It may be exposed to unintended individuals."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 118
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "eea3dd418bad60bca603a8540983a15fbc517c9e2f4283d5af9fac3d55f5e497"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10249)\nCalling \"ok\". This shows the sensitive data \"failed(this).output(e.getMessage()).build()\" in a user interface. It may be exposed to unintended individuals.\n[CWE-317](https://cwe.mitre.org/data/definitions/317.html)\nRemediation Advice: Do not leak this data to a user interface."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"checkout\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 118
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sensitive_data: Calling \"build\". This call stores sensitive data in \"(<return value>).assignment\". (The virtual call resolves to \"org.owasp.webgoat.container.assignments.AttackResult.AttackResultBuilder.build()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: sensitive_data: Calling \"getSimpleName\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"java.lang.Class.getSimpleName()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: return: Returning \"new org.owasp.webgoat.container.assignments.AttackResult(lessonCompleted, messages.getMessage(feedbackResourceBundleKey, feedbackArgs), messages.getMessage(output, output, outputArgs), assignment.getClass().getSimpleName(), attemptWasMade)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 118
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"ok\". This shows the sensitive data \"failed(this).output(e.getMessage()).build()\" in a user interface. It may be exposed to unintended individuals."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 116
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "2810b8b293234f5dd328e76f19d7f7f0b1dfd31cd9b967cf9bf02c4ece47dbc0"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10249)\nCalling \"ok\". This shows the sensitive data \"failed(this).feedback(\"jwt-refresh-not-tom\").feedbackArgs(user).build()\" in a user interface. It may be exposed to unintended individuals.\n[CWE-317](https://cwe.mitre.org/data/definitions/317.html)\nRemediation Advice: Do not leak this data to a user interface."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"checkout\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 116
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sensitive_data: Calling \"build\". This call stores sensitive data in \"(<return value>).assignment\". (The virtual call resolves to \"org.owasp.webgoat.container.assignments.AttackResult.AttackResultBuilder.build()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: sensitive_data: Calling \"getSimpleName\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"java.lang.Class.getSimpleName()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: return: Returning \"new org.owasp.webgoat.container.assignments.AttackResult(lessonCompleted, messages.getMessage(feedbackResourceBundleKey, feedbackArgs), messages.getMessage(output, output, outputArgs), assignment.getClass().getSimpleName(), attemptWasMade)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 116
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"ok\". This shows the sensitive data \"failed(this).feedback(\"jwt-refresh-not-tom\").feedbackArgs(user).build()\" in a user interface. It may be exposed to unintended individuals."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 120
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "deb237d20ab4ec31221d850f5483b896775fcae01d5c61a2883e6ea3a787ab9e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10249)\nCalling \"ok\". This shows the sensitive data \"failed(this).feedback(\"jwt-invalid-token\").build()\" in a user interface. It may be exposed to unintended individuals.\n[CWE-317](https://cwe.mitre.org/data/definitions/317.html)\nRemediation Advice: Do not leak this data to a user interface."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"checkout\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 120
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sensitive_data: Calling \"build\". This call stores sensitive data in \"(<return value>).assignment\". (The virtual call resolves to \"org.owasp.webgoat.container.assignments.AttackResult.AttackResultBuilder.build()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: sensitive_data: Calling \"getSimpleName\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"java.lang.Class.getSimpleName()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: return: Returning \"new org.owasp.webgoat.container.assignments.AttackResult(lessonCompleted, messages.getMessage(feedbackResourceBundleKey, feedbackArgs), messages.getMessage(output, output, outputArgs), assignment.getClass().getSimpleName(), attemptWasMade)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 120
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"ok\". This shows the sensitive data \"failed(this).feedback(\"jwt-invalid-token\").build()\" in a user interface. It may be exposed to unintended individuals."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 114
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "2fb06aeb5711bfebe63c2d755911190a9bef2cad1949c0c4674803287e49b838"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10249)\nCalling \"ok\". This shows the sensitive data \"success(this).build()\" in a user interface. It may be exposed to unintended individuals.\n[CWE-317](https://cwe.mitre.org/data/definitions/317.html)\nRemediation Advice: Do not leak this data to a user interface."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"checkout\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 114
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sensitive_data: Calling \"build\". This call stores sensitive data in \"(<return value>).assignment\". (The virtual call resolves to \"org.owasp.webgoat.container.assignments.AttackResult.AttackResultBuilder.build()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: sensitive_data: Calling \"getSimpleName\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"java.lang.Class.getSimpleName()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: return: Returning \"new org.owasp.webgoat.container.assignments.AttackResult(lessonCompleted, messages.getMessage(feedbackResourceBundleKey, feedbackArgs), messages.getMessage(output, output, outputArgs), assignment.getClass().getSimpleName(), attemptWasMade)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 114
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"ok\". This shows the sensitive data \"success(this).build()\" in a user interface. It may be exposed to unintended individuals."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                        },
                        "region": {
                           "startLine": 54
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3ce6bb176e7dda3c2ef675cb6ec5843b4717926aefebd8ba863fc755828e3f95"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10228)\nCalling \"debug\". This logs the sensitive data \"token\" to a file or the console. It may be exposed to unintended individuals. (The virtual call resolves to \"org.slf4j.Logger.debug(java.lang.String)\".)\n[CWE-532](https://cwe.mitre.org/data/definitions/532.html)\nRemediation Advice: Do not leak this data to a log file or the console."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 47
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: sensitive_data: Calling \"compact\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"io.jsonwebtoken.impl.DefaultJwtBuilder.compact()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 47
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: assign: Assigning: \"token\" = \"io.jsonwebtoken.Jwts.builder().setHeaderParam(\"kid\", \"webgoat_key\").setIssuedAt(new java.util.Date(java.lang.System.currentTimeMillis() + java.util.concurrent.TimeUnit.DAYS.toDays(10L))).setClaims(claims).signWith(io.jsonwebtoken.SignatureAlgorithm.HS512, key).compact()\". Now \"token\" contains sensitive data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"debug\". This logs the sensitive data \"token\" to a file or the console. It may be exposed to unintended individuals. (The virtual call resolves to \"org.slf4j.Logger.debug(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.container_running_as_root",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "Dockerfile_desktop"
                        },
                        "region": {
                           "startLine": 1
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "981f21d84daae7e99723458a3388a1aa6f1383a0568e0bcc26aab450d6b99aa2"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10203)\nThe Docker container is configured to run as the root user.\n[CWE-269](https://cwe.mitre.org/data/definitions/269.html)\nRemediation Advice: Explicitly set the last `USER` value to a non-root user to prevent the container from running in a privileged context."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "Dockerfile_desktop"
                                       },
                                       "region": {
                                          "startLine": 1
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The Docker container is configured to run as the root user."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.excessive_session_lifetime",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/application-webwolf.properties"
                        },
                        "region": {
                           "startLine": 11
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c8a2895aea050a4e1d7392f422cbb0fdae3263f36f96fac2c891ebb3d1f57a5d"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10183)\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/application-webwolf.properties"
                                       },
                                       "region": {
                                          "startLine": 11
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.excessive_session_lifetime",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/resources/application-webwolf.properties"
                        },
                        "region": {
                           "startLine": 11
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4b8597a8b095f0f478c78ba6842f3a15debe317fd832eb14d319b5d7b0740b91"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10183)\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/resources/application-webwolf.properties"
                                       },
                                       "region": {
                                          "startLine": 11
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_ignored_expiration_time",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                        },
                        "region": {
                           "startLine": 124
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "2cc7535a166b1332cbb553d6c583978e559694b606197161b971e642b7622790"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10164)\nThe instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Verify that the token is still valid by invoking the `setRequireExpirationTime()` function.\nInvoke the `setMaxFutureValidityInMinutes()` function if you need to tolerate a small amount of clock skew."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                                       },
                                       "region": {
                                          "startLine": 124
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_no_claims_validation",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                        },
                        "region": {
                           "startLine": 124
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "5813b5b09517661cd8a4f6698d2bdae01fcf72f4955160e6d0e47aae107b3a16"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10205)\nThe application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios.\n[CWE-345](https://cwe.mitre.org/data/definitions/345.html)\nRemediation Advice: Avoid invoking `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` which disable JSON Web Token claims validation."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                                       },
                                       "region": {
                                          "startLine": 124
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                        },
                        "region": {
                           "startLine": 122
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e078d963bf8d4a61ae9ce2b59e46ff9889d982548ca34ccb8268ee3be2399f4b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10175)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 122
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpointTest.java"
                        },
                        "region": {
                           "startLine": 37
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f7ea198f6edf0715cfb039aed6a68ab339bdc4661f690a8928744915f15df5be"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10181)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 37
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                        },
                        "region": {
                           "startLine": 48
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "bf3da9d8907b67ee5c5f0856b19cadc6a586ae1f5abff12fb8041a51f317bec0"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10268)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 48
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 86
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "1741956ad76b7d87a12ac5942b39f3b34f3d3edb00b2bbbe7b665ec5efa28c84"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10184)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                        },
                        "region": {
                           "startLine": 102
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4eb548f354eaf2103218b4fb24eeed7fb32ee868bcc0943373050acce4356d90"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10146)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 102
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                        },
                        "region": {
                           "startLine": 107
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "d489ea4f3d1560dbd99674b2cab393d2b29e5c2723ba9267490cd81b139c8ece"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10165)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 107
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java"
                        },
                        "region": {
                           "startLine": 68
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "89101f1ec60e8e082336a73730d6808d024325e815dab0965f5467f1831f5c11"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10244)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 203
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "aa28021c78e8adaddafdfa3eaff7797dc82fb9c23a5edb3aa21f61b3e5a5b5bf"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10152)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 203
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 180
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c6af568adea70f36f545f2740b39033559cec56955cc8a770068014c348e473a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10263)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 180
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "16a234d311906355e5bda6ac28a661ad918f84499e62dce731ed63dfe670167b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10163)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 107
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a8593583d4fd1bdb9ac5f09a9abfafb6c82003e805e23869b3d28eddb399dcd4"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10255)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 107
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 160
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f52bee3e52e9d28a0fc0bf944e540da76d6e0d2747313377bf8e202a4375651f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10217)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 160
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 128
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "5aec27b156e9fd9eedd7f246ee5a113d46d1081f87ec1495e1b23cd3cfcc294a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10150)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 128
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 88
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f54aa55f019afd3147dcc887cb94f5aba05cb32908a5a21fe35413d96c2375dc"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10235)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/csrf/CSRFFeedbackTest.java"
                        },
                        "region": {
                           "startLine": 69
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "cb0f6b1ef2f40d9bc27bdabd350d07d1b02a2590a380735b55778a41c57de46b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10189)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/csrf/CSRFFeedbackTest.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 130
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ce4f15bc4f5b8c904617fd5dc40fc5c6414bdd0c06ba154b0ebd8d29cc756ea6"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10220)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 130
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 253
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c026396211bfdd54838437ecfe726ffa90bb2be973fea92832866e4d58bac0f7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10158)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 253
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        },
                        "region": {
                           "startLine": 76
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f7bd9788915bc0a7283bb1e18bd4bc21eec03c886197d877968ba6a6e22ed543"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10207)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignmentTest.java"
                        },
                        "region": {
                           "startLine": 113
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "615b364874bc3d56139c9a30ddf6217cfc63b6dc6fd2d2600666c775fbc33611"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10269)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignmentTest.java"
                                       },
                                       "region": {
                                          "startLine": 113
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignmentTest.java"
                        },
                        "region": {
                           "startLine": 74
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c53d3d16d3d346ec23f9fd5afaa1649b4bc5b3514e979c299e556a70fc3e0223"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10166)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignmentTest.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 236
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "275ae4219d00792f7b7ae7c8ac6cc16215df3ae35fda88829a288e4082b60a5f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10147)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 236
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_samesite_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 131
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "d65ee591e874e437283f72b14da3852ce9a069c3368f314ce6044898890a0347"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10223)\nThe application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.\n[CWE-1275](https://cwe.mitre.org/data/definitions/1275.html)\nRemediation Advice: Set the `Samesite` attribute on this cookie to a safe value such as `Strict` or `Lax`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 131
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_samesite_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 136
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "63bdf120c4b29d48c6243cacb8d4545355d5bdb2e3961db92942468772a69eaa"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10211)\nThe application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.\n[CWE-1275](https://cwe.mitre.org/data/definitions/1275.html)\nRemediation Advice: Set the `Samesite` attribute on this cookie to a safe value such as `Strict` or `Lax`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 136
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.verbose_error_message",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/resources/application-webwolf.properties"
                        },
                        "region": {
                           "startLine": 1
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c6b6365bb3f17c6893f0d3deb92ba0c13a89424784f7a2afbb5c4892d33664d5"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10206)\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.\n[CWE-209](https://cwe.mitre.org/data/definitions/209.html)\nRemediation Advice: Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/resources/application-webwolf.properties"
                                       },
                                       "region": {
                                          "startLine": 1
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.verbose_error_message",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/application-webwolf.properties"
                        },
                        "region": {
                           "startLine": 1
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "8e49b8ad19b3aa707bd382205a173a27d4bc9f7ed4f61e0378a7d44831ada98d"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10206)\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.\n[CWE-209](https://cwe.mitre.org/data/definitions/209.html)\nRemediation Advice: Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/application-webwolf.properties"
                                       },
                                       "region": {
                                          "startLine": 1
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.verbose_error_message",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/resources/application-webgoat.properties"
                        },
                        "region": {
                           "startLine": 1
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c0a57e8abd7e753a6f4b31fe756c4294d1be9c95deaa5cd94614dca489607ea5"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10225)\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.\n[CWE-209](https://cwe.mitre.org/data/definitions/209.html)\nRemediation Advice: Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/resources/application-webgoat.properties"
                                       },
                                       "region": {
                                          "startLine": 1
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.verbose_error_message",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/application-webgoat.properties"
                        },
                        "region": {
                           "startLine": 1
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4dff8a5504ab20c07bc38dd68f2ecf2db26194a312ac58813bde7ad5ab362b6e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10225)\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.\n[CWE-209](https://cwe.mitre.org/data/definitions/209.html)\nRemediation Advice: Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/application-webgoat.properties"
                                       },
                                       "region": {
                                          "startLine": 1
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.weak_password_hash",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                        },
                        "region": {
                           "startLine": 84
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "640d30c7168c0cfd13f50a3359b2b5a070500095b68d62a842b80e305c30040a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10192)\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.\n[CWE-261](https://cwe.mitre.org/data/definitions/261.html)\nRemediation Advice: Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                                       },
                                       "region": {
                                          "startLine": 84
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                        },
                        "region": {
                           "startLine": 69
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ee9f9e5f13487bd8d36e7aba6632311b7c2c9dc4d9e41b53ca320a211dd07b32"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10186)\nCalling \"executeQuery\". Passing the tainted value \"checkUserQuery\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"registerNewUser\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"username_reg\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"username_reg\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: assign: Assigning a tainted string to \"checkUserQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: sql_sink: Calling \"executeQuery\". Passing the tainted value \"checkUserQuery\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        },
                        "region": {
                           "startLine": 56
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "894bfc41174cd373b3b3beb79506f17fbd367229edaeb50e161130e4c5ca8174"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10237)\nCalling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"injection\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"injection\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.1: concat: Creating a tainted string using \"accountName\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                        },
                        "region": {
                           "startLine": 59
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4b7ff9d015be9f5246592fbc219a9330bbcc6ac9cf5b92da77b1f76f17de1cad"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10239)\nCalling \"injectableQueryAvailability\". Passing the tainted value \"action_string\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"action_string\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQueryAvailability\". Passing the tainted value \"action_string\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"action\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "b71d8209a5e63c35350579e15956dfce21c7ae4c2f14f68ed1e4c530db29d7ab"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10190)\nCalling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"attack\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"userId\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: identity: Calling \"toUpperCase\". This call assigns \"userId\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.toUpperCase()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: identity: Calling \"replace\". This call assigns \"userId.toUpperCase()\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: identity: Calling \"replace\". This call assigns \"userId.toUpperCase().replace(\"FROM\", \"\")\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: assign: Assigning: \"userId\" = \"userId.toUpperCase().replace(\"FROM\", \"\").replace(\"SELECT\", \"\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #7.1: concat: Creating a tainted string using \"accountName\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #7.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event #7.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                        },
                        "region": {
                           "startLine": 71
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "5acbd7d345975349c3a477ca8a7b7ad8b1f0eb1875354e5b32b160c513773782"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10257)\nCalling \"prepareStatement\". Passing the tainted value \"\"select id, hostname, ip, mac, status, description from SERVERS where status <> 'out of order' order by \" + column\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"sort\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"column\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"column\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sql_sink: Calling \"prepareStatement\". Passing the tainted value \"\"select id, hostname, ip, mac, status, description from SERVERS where status <> 'out of order' order by \" + column\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        },
                        "region": {
                           "startLine": 56
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a17b3924edbf62fdea62f5b1e13d2d34fd4df36c1d5339d50626bf41da4f5655"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10209)\nCalling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"operator\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"operator\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.1: concat: Creating a tainted string using \"accountName\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                        },
                        "region": {
                           "startLine": 58
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "b95332698259d498993906c5f37adfd9416d9f455d686cd86ffc076acbca0a6b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10247)\nCalling \"injectableQuery\". Passing the tainted value \"userid\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b.injectableQuery(java.lang.String, java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"userid\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"userid\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b.injectableQuery(java.lang.String, java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"accountName\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"queryString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"prepareStatement\". Passing the tainted value \"queryString\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String, int, int)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                        },
                        "region": {
                           "startLine": 54
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "9b3813e9735c52371aa6ae709643eb8483e7667c751f814bda992dec59127a45"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10193)\nCalling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"query\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: sql_sink: Calling \"executeUpdate\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeUpdate(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "UNLOCKED_ACCESS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                        },
                        "region": {
                           "startLine": 27
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "1366a1afcbed9ebbf09b0aae2e967cc6ceb908cf5ff545e1722542fb2286ebb1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10252)\nThread-shared \"webSession\" is modified in a concurrent context without any synchronization.\n[CWE-820](https://cwe.mitre.org/data/definitions/820.html)\nRemediation Advice: To avoid data races, make the data thread-local, or add locking to all the concurrent accesses to the data, including the reads."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 27
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: thread_shared_data: \"this\" is thread-shared because it has type \"org.owasp.webgoat.container.service.SessionService\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 18
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: thread_shared_type: \"org.owasp.webgoat.container.service.SessionService\" is thread-shared because it is annotated with \"Controller\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 26
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: thread_entry_point: \"applySecurity\" is an entry point because it is annotated with \"RequestMapping\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 27
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: thread_unsafe_modification: Thread-shared \"webSession\" is modified in a concurrent context without any synchronization."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 27
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: write: \"webSession\" is modified in call to \"toggleSecurity\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/session/WebSession.java"
                                       },
                                       "region": {
                                          "startLine": 84
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.1: cond_true: Condition \"!this.securityEnabled\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/session/WebSession.java"
                                       },
                                       "region": {
                                          "startLine": 84
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.2: write: \"this.securityEnabled\" is modified."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "UNLOCKED_ACCESS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                        },
                        "region": {
                           "startLine": 31
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f653fe9046f5abf7f0121bd58176114c415c4844aa38cd32d2f8191d93b77fc3"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10187)\nThread-shared \"messages\" is modified in a concurrent context without any synchronization.\n[CWE-820](https://cwe.mitre.org/data/definitions/820.html)\nRemediation Advice: To avoid data races, make the data thread-local, or add locking to all the concurrent accesses to the data, including the reads."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 31
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: thread_shared_data: \"this\" is thread-shared because it has type \"org.owasp.webgoat.container.service.SessionService\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 18
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: thread_shared_type: \"org.owasp.webgoat.container.service.SessionService\" is thread-shared because it is annotated with \"Controller\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 26
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: thread_entry_point: \"applySecurity\" is an entry point because it is annotated with \"RequestMapping\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 31
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: thread_unsafe_modification: Thread-shared \"messages\" is modified in a concurrent context without any synchronization."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 31
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: write: \"messages\" is modified in call to \"getMessage\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/i18n/Messages.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.1: write: \"this\" is modified in call to \"getMessage\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "URL_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                        },
                        "region": {
                           "startLine": 45
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "8ec67642dec27b8f128ef79c45af8040b07d427e2a4f1e7522f2f7fcdd17701c"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10208)\nCalling \"furBall\". This call uses \"url\" for sensitive computation. (The virtual call resolves to \"org.owasp.webgoat.lessons.ssrf.SSRFTask2.furBall(java.lang.String)\".)\n[CWE-918](https://cwe.mitre.org/data/definitions/918.html)\nRemediation Advice: URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 44
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 44
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"url\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 45
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"furBall\". This call uses \"url\" for sensitive computation. (The virtual call resolves to \"org.owasp.webgoat.lessons.ssrf.SSRFTask2.furBall(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: identity: Calling \"URL\". This call assigns \"url\" to \"<storage from new>\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: pass: Passing \"new java.net.URL(url)\" to \"openStream\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sink: Constructing a URL using the tainted value \"new java.net.URL(url)\". This may allow an attacker to access or modify critical or sensitive files, or redirect to a malicious website."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "WEAK_PASSWORD_HASH",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                        },
                        "region": {
                           "startLine": 59
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "aa3a5e6301641621f99168411b3af038a0a105e1c23083c856c8b99b8b424bcc"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10194)\nHashing a password using a computationally cheap cryptographic hash function. An attacker can compute more hashes per second with a cheaper function than with a more expensive function; therefore, if such password hashes leak to an attacker, they can recover more passwords in less time.\n[CWE-916](https://cwe.mitre.org/data/definitions/916.html)\nRemediation Advice: The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: inferred_password: Expression \"password\" contains password data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: concat: Creating a tainted string using \"password\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: assign: Assigning a tainted string to \"salted\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: identity: Calling \"getBytes\". This call assigns \"salted\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.getBytes(java.nio.charset.Charset)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: crypto_field: \n* \"java.security.MessageDigest.getInstance(\"SHA-256\")\" uses the SHA256 algorithm. \n"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: assign: Assigning: \"md\" = \"java.security.MessageDigest.getInstance(\"SHA-256\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: crypto_field: \n* \"md\" takes \"salted.getBytes(java.nio.charset.StandardCharsets.UTF_8)\" as input. \n"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: weak_hash: Hashing a password using a computationally cheap cryptographic hash function. An attacker can compute more hashes per second with a cheaper function than with a more expensive function; therefore, if such password hashes leak to an attacker, they can recover more passwords in less time."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XML_EXTERNAL_ENTITY",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java"
                        },
                        "region": {
                           "startLine": 75
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "8d4f671e9fb015e764c19887883ee573bdc381fa74c0050d2c6ec9e2360afd7b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10162)\nCalling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.lessons.xxe.CommentsCache.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service.\n[CWE-827](https://cwe.mitre.org/data/definitions/827.html)\nRemediation Advice: The recommended and strongest prevention against both external entity and entity expansion attacks is to disable DTD processing in the parser. A \"javax.xml.stream.XMLInputFactory\" instance \"xiFactory\" can be configured to disable DTD processing by calling \"xiFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)\"."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"createNewUser\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"commentStr\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 75
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: xml_processor_sink: Calling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.lessons.xxe.CommentsCache.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                                       },
                                       "region": {
                                          "startLine": 105
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: identity: Calling \"StringReader\". This call assigns \"xml\" to \"<storage from new>\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                                       },
                                       "region": {
                                          "startLine": 105
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: xml_processor_sink: Calling \"createXMLStreamReader\". Passing the tainted value \"new java.io.StringReader(xml)\" to a weakly configured XML parser. (The virtual call resolves to \"javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.Reader)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XSS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                        },
                        "region": {
                           "startLine": 56
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "dc5f5a1f29102bd6130bfc2e078b007c938110e0bf1735c7f066a2699ded6d49"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10168)\nConcatenating \"basicAuth\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block.\n[CWE-79](https://cwe.mitre.org/data/definitions/79.html)\nRemediation Advice: Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(basicAuth)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: tainted_source: Reading data from an HTTP request, which is considered tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint_path_call: Passing the tainted data through \"java.security.Principal.getName()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: taint_path_arg: Passing the tainted data, \"username\", to \"org.owasp.webgoat.lessons.cryptography.EncodingAssignment.getBasicAuth(java.lang.String, java.lang.String)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 40
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: taint_path_param: Parameter \"username\" receives the tainted data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: taint_path: Concatenating the tainted data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: taint_path: Concatenating the tainted data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: taint_path_call: Passing the tainted data through \"java.lang.String.getBytes()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: unknown_string_function: Passing the tainted data through \"java.util.Base64$Encoder.encodeToString(byte[])\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: taint_path_return: Returning the tainted data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 10: taint_path_call: \"org.owasp.webgoat.lessons.cryptography.EncodingAssignment.getBasicAuth(java.lang.String, java.lang.String)\" returns the tainted data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 11: xss_injection_site: Concatenating \"basicAuth\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 12: xss_sink: Printing to HTML output."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XSS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java"
                        },
                        "region": {
                           "startLine": 46
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "46621cd6a1c746be270fba832e23ca77751bde9d140a6f58f61b61381102ce9c"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10287)\nPrinting \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block.\n[CWE-79](https://cwe.mitre.org/data/definitions/79.html)\nRemediation Advice: Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(this)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 15
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: tainted_source: Reading data from an aggressive or audit dataflow source. In this case, unwritten fields are treated as tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 15
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint_path_field: Tainted data was stored to field \"guesses\", which is defined here. This field is now considered to be tainted data throughout the program."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 46
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: taint_path_field: Reading the tainted data from the field \"guesses\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 46
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: xss_injection_site: Printing \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XSS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java"
                        },
                        "region": {
                           "startLine": 80
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6969610f82b85498a3c1aea8f58f58ac0a17215e5c7ba77053d0e75c1f1dc7e8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10275)\nPrinting \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block.\n[CWE-79](https://cwe.mitre.org/data/definitions/79.html)\nRemediation Advice: Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(this)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 38
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: tainted_source: Reading data from an aggressive or audit dataflow source. In this case, unwritten fields are treated as tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 38
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint_path_field: Tainted data was stored to field \"guesses\", which is defined here. This field is now considered to be tainted data throughout the program."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: taint_path_field: Reading the tainted data from the field \"guesses\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: xss_injection_site: Printing \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XSS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java"
                        },
                        "region": {
                           "startLine": 51
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ede603672b86aa0dfdc2b045f3f81473afc7aba4cbbd56fc2f3fbf0b93a54fc6"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10284)\nPrinting \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block.\n[CWE-79](https://cwe.mitre.org/data/definitions/79.html)\nRemediation Advice: Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(this)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 15
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: tainted_source: Reading data from an aggressive or audit dataflow source. In this case, unwritten fields are treated as tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 15
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint_path_field: Tainted data was stored to field \"guesses\", which is defined here. This field is now considered to be tainted data throughout the program."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: taint_path_field: Reading the tainted data from the field \"guesses\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: xss_injection_site: Printing \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XSS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java"
                        },
                        "region": {
                           "startLine": 85
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "7d92547a31dbd34a73a58f55db5d557e6d003e7ce11ad179f371641a3ef13d35"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10282)\nPrinting \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block.\n[CWE-79](https://cwe.mitre.org/data/definitions/79.html)\nRemediation Advice: Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(this)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: tainted_source: Reading data from an aggressive or audit dataflow source. In this case, unwritten fields are treated as tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint_path_field: Tainted data was stored to field \"guesses\", which is defined here. This field is now considered to be tainted data throughout the program."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: taint_path_field: Reading the tainted data from the field \"guesses\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: xss_injection_site: Printing \"this.guesses\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        },
                        "region": {
                           "startLine": 59
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "1642e8c212f02aea50eaf0cf29e855fa0410677fc55244dba5b16940b9c549e6"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10094)\n\"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"injectableQueryConfidentiality\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 77
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: requires_protection: Calling \"log\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                        },
                        "region": {
                           "startLine": 53
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "acad03892d70dcd4b6bfc7bdfc38928ca61984068ae06a3cb61ea1e2745d864a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10041)\n\"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"injectableQuery\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: requires_protection: Calling \"executeUpdate\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java"
                        },
                        "region": {
                           "startLine": 53
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "63347bf9ec4bc41f7a5e895b9b3fa4b4dd603b63254eb5cc22c6ba4a072f4e63"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10129)\n\"org.owasp.webgoat.lessons.csrf.CSRFLogin.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.csrf.CSRFLogin.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_true: Condition \"userName.startsWith(\"csrf\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: requires_protection: Calling \"markAssignmentSolvedWithRealUser\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: requires_protection: Calling \"save\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                        },
                        "region": {
                           "startLine": 56
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "1ef2f55d4d1a9994d820e7e8d387d759adfab4020a0fb861cf861e5c52c5221f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10070)\n\"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallenge.registerNewUser\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallenge.registerNewUser\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_true: Condition \"attackResult == null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: cond_false: Condition \"resultSet.next()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 83
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: requires_protection: Calling \"execute\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/FlagController.java"
                        },
                        "region": {
                           "startLine": 47
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "21f4cf6d54f5cede6d585a5f44e2c0a16de102881940d16691e98ed0686260c7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10073)\n\"org.owasp.webgoat.lessons.challenges.FlagController.postFlag\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/FlagController.java"
                                       },
                                       "region": {
                                          "startLine": 47
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.challenges.FlagController.postFlag\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/FlagController.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"expectedFlag.isCorrect(flag)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/FlagController.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: requires_protection: Calling \"save\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                        },
                        "region": {
                           "startLine": 54
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "14d0a06ad8b776818bdf6af11c0ac55f27a1a9f65c6ae8f8412cfded8d2a3eeb"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10017)\n\"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson4.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson4.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"injectableQuery\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: requires_protection: Calling \"executeUpdate\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                        },
                        "region": {
                           "startLine": 26
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6f0f02103995dcf0f90dc45a2d2d011277a8cb80a01df86557aee63d166f8316"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10063)\n\"org.owasp.webgoat.container.service.SessionService.applySecurity\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 26
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.container.service.SessionService.applySecurity\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                                       },
                                       "region": {
                                          "startLine": 28
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"restartLesson\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: requires_protection: Calling \"save\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "CSRF",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                        },
                        "region": {
                           "startLine": 100
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "8bbdb4d3c57707db745cc41ec723f915145c20d9f37265755853556c1062ba2f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10113)\n\"org.owasp.webgoat.lessons.missingac.MissingFunctionACUsers.addUser\" is a web-app entry point that requires protection from cross-site request forgery (CSRF).\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Use the CSRF validator method \"org.owasp.webgoat.CSRFIntegrationTest.checkAssignment8\" to protect against CSRF. Please refer to the examples of its use elsewhere."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                                       },
                                       "region": {
                                          "startLine": 100
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"org.owasp.webgoat.lessons.missingac.MissingFunctionACUsers.addUser\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_csrf_check: Example 1: Examples of CSRF validator calls."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                                       },
                                       "region": {
                                          "startLine": 102
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: requires_protection: Calling \"save\" updates the database."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingAccessControlUserRepository.java"
                                       },
                                       "region": {
                                          "startLine": 40
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: requires_protection: Calling \"update\" updates the database."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "DEADCODE",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 45
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "808137df0718b83d07a3eb009c87f7c7f62f84821cf3b294ace6f828d0314230"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10112)\nExecution cannot reach the expression \"typeof requirejs !== \"undefined\"\" inside this statement: \"if (!ACE_NAMESPACE && (type...\".\n[CWE-561](https://cwe.mitre.org/data/definitions/561.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 39
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: assignment: Assigning: \"ACE_NAMESPACE\" = \"\"ace\"\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 45
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: truth: At condition \"ACE_NAMESPACE\", the truth value of \"ACE_NAMESPACE\" must be true."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 45
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: possible_types: At condition \"ACE_NAMESPACE\", the type of \"ACE_NAMESPACE\" must be string."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 45
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_condition: The condition \"!ACE_NAMESPACE\" cannot be true."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 45
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_line: Execution cannot reach the expression \"typeof requirejs !== \"undefined\"\" inside this statement: \"if (!ACE_NAMESPACE && (type...\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "DEADCODE",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java"
                        },
                        "region": {
                           "startLine": 62
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "8b1f7df5071071174ed043675a21e3ced973c47b786ef7a0c557625490e4b776"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10076)\nExecution cannot reach this statement: \"return failed(this).feedbac...\".\n[CWE-561](https://cwe.mitre.org/data/definitions/561.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: cond_const: Condition \"passwordCorrect\", taking false branch. Now the value of \"passwordCorrect\" is equal to 0."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: const: At condition \"passwordCorrect\", the value of \"passwordCorrect\" must be equal to 0."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_condition: The condition \"passwordCorrect\" cannot be true."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: dead_error_line: Execution cannot reach this statement: \"return failed(this).feedbac...\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "FORWARD_NULL",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 7631
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "966cab5e4ab83d35737fe3da68ff357b3f06628016353f02862e9a63efdc03bd"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10027)\nAccessing a property of null-like value \"completionKeywords\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7609
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: assign_undefined: Assigning: \"completionKeywords\" = \"undefined\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7607
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"!this.completionKeywords\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7629
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: cond_false: Condition \"!append\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7631
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: property_access: Accessing a property of null-like value \"completionKeywords\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                        },
                        "region": {
                           "startLine": 55
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "26f0cdce30b87986ef673c0148201290e2eaa5908c0074c926bd03cc21e764b1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10032)\nCalling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)\n[CWE-321](https://cwe.mitre.org/data/definitions/321.html)\nRemediation Advice: Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"qwertyqwerty1234\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: crypto_use: Calling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/container/users/UserRepositoryTest.java"
                        },
                        "region": {
                           "startLine": 17
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "fd66a55437f1f82cbb8a3af8c7be222025711f23ac47f5f654542edd2eacf2fc"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10131)\nCalling \"WebGoatUser\". This call uses the constant string as a password.\n[CWE-259](https://cwe.mitre.org/data/definitions/259.html)\nRemediation Advice: Passwords should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserRepositoryTest.java"
                                       },
                                       "region": {
                                          "startLine": 17
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"password\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserRepositoryTest.java"
                                       },
                                       "region": {
                                          "startLine": 17
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 33
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/container/plugins/LessonTest.java"
                        },
                        "region": {
                           "startLine": 52
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c5fec475f804831956aed03fff9d15046a780ec9222fd00b2f66aeac77eed65c"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10011)\nCalling \"WebGoatUser\". This call uses the constant string as a password.\n[CWE-259](https://cwe.mitre.org/data/definitions/259.html)\nRemediation Advice: Passwords should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/plugins/LessonTest.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"test\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/plugins/LessonTest.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/users/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 33
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: password_use: Calling \"WebGoatUser\". This call uses the constant string as a password."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HARDCODED_CREDENTIALS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 136
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ecea04b12775d6668fa864cbeafc079ba3baa683eb84cdaf0b1353771521982e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10074)\nCalling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)\n[CWE-321](https://cwe.mitre.org/data/definitions/321.html)\nRemediation Advice: Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 136
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: hardcoded_credential: The constant string \"\"bm5n3SkxCX4kKRy4\"\" is a credential or key."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 136
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: crypto_use: Calling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "HIBERNATE_BAD_HASHCODE",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java"
                        },
                        "region": {
                           "startLine": 39
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4d3f8b80ca3d0dc27ca840ac9ed568dd5623438c7f85ac4fa37fd91381f166c7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10035)\nResult depends on \"org.owasp.webgoat.container.lessons.Assignment.getId()\", which is a Hibernate identifier.\n[CWE-1023](https://cwe.mitre.org/data/definitions/1023.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java"
                                       },
                                       "region": {
                                          "startLine": 45
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: annotated_id_member: Member \"id\" is annotated with \"@javax.persistence.Id\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/session/LessonTrackerTest.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: new_transient: Constructing new transient instance \"a1\" of entity type \"org.owasp.webgoat.container.lessons.Assignment\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java"
                                       },
                                       "region": {
                                          "startLine": 39
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: bad_equals: Result depends on \"org.owasp.webgoat.container.lessons.Assignment.getId()\", which is a Hibernate identifier."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/session/LessonTrackerTest.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: hashed_collection_access: Accessing a collection that calls \"equals\" and \"hashCode\" on \"a1\" before its Hibernate identifier has been set."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "INSECURE_COMMUNICATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                        },
                        "region": {
                           "startLine": 104
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "5f4e271f47462b7e9c7c6232fa12f501e64a7829db21d6fc07451e3e97877c83"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10114)\nCommunicating over an insecure channel.\n[CWE-319](https://cwe.mitre.org/data/definitions/319.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 104
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: protocol: Using an unencrypted HTTP connection."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 104
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: use: Communicating over an insecure channel."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "MISSING_BREAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 13122
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "7bcb352162e53ce44a93e77bfd26ce34d17f7a08901861c198be06b2810f4a38"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10137)\nThe case for value \"\"center-animate\"\" is not terminated by a \"break\" statement.\n[CWE-484](https://cwe.mitre.org/data/definitions/484.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13122
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unterminated_case: The case for value \"\"center-animate\"\" is not terminated by a \"break\" statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13124
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: fallthrough: The above case falls through to this one."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 10929
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "24c57ba24d06471abaf645d000a6128d441cb84298ab9ee4b65dfe3197093754"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10054)\nReading variable \"idx\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 10929
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Reading variable \"idx\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 10897
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3274c7886d67c351f1a016c553858929005ba04f099dac7fb39b830b38b79525"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10054)\nReading variable \"idx\" and discarding the result. What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Perhaps this code is incomplete or mistyped in some way."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 10897
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Reading variable \"idx\" and discarding the result. What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NO_EFFECT",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 325
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "48bbd435c253ad35522c94e7487dcfd92d9d97d4d9c2b5f1391494d09f4635c4"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10109)\nDiscarding the result of operator \"==\" in \"lengthBefore + 1 == array.length\". What was this code intended to accomplish?\n[CWE-398](https://cwe.mitre.org/data/definitions/398.html)\nRemediation Advice: Did you intend to make an assertion or assignment?"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 325
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: unused_expr: Discarding the result of operator \"==\" in \"lengthBefore + 1 == array.length\". What was this code intended to accomplish?"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                        },
                        "region": {
                           "startLine": 146
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "266180315f1ca41cf07f69aede659c291cfbe8118a207e9c04c7b72c8fdab367"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10144)\nCalling a method on null object \"propsDefault\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 145
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"getProperties\" returns \"null\" (checked 0 out of 2 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 158
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: null_assign: Assigning: \"prop\" = null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 159
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: cond_false: Condition \"lang == null\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 159
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.3: cond_true: Condition \"lang.equals(\"\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 161
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.4: if_fallthrough: Falling through to end of if statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 164
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.5: throw: Throwing \"java.io.FileNotFoundException\" (or subclass) from call to \"FileInputStream\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 170
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.6: catch: Catching exception."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 173
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.7: return_null_var: Returning \"prop\", which is null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 145
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assigned: Assigning: \"propsDefault\" = \"null\" return value from \"getProperties\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 146
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: null_method_call: Calling a method on null object \"propsDefault\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java"
                        },
                        "region": {
                           "startLine": 54
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "b06e7e16e37e6aefda44b7518f1729e319d33429f43334d3fd00be9e8cc2b41a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10051)\nDereferencing a pointer that might be \"null\" \"user\" when calling \"DisplayUser\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"findByUsername\" returns \"null\" (checked 1 out of 3 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingAccessControlUserRepository.java"
                                       },
                                       "region": {
                                          "startLine": 33
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: cond_true: Condition \"org.springframework.util.CollectionUtils.isEmpty(users)\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingAccessControlUserRepository.java"
                                       },
                                       "region": {
                                          "startLine": 34
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: return_null: Explicitly returning null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 1: Assigning: \"currentUser\" = return value from \"userRepository.findByUsername(webSession.getUserName())\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 1 (cont.): \"currentUser\" has its value checked in \"currentUser != null\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assigned: Assigning: \"user\" = \"null\" return value from \"findByUsername\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: dereference: Dereferencing a pointer that might be \"null\" \"user\" when calling \"DisplayUser\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: method_call: Calling method on \"user\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java"
                        },
                        "region": {
                           "startLine": 61
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "2eb0bfae86d959dcc605413cbbe38924483603609b0368a0badae9b998c632a8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10030)\nDereferencing a pointer that might be \"null\" \"user\" when calling \"DisplayUser\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"findByUsername\" returns \"null\" (checked 1 out of 3 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingAccessControlUserRepository.java"
                                       },
                                       "region": {
                                          "startLine": 33
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: cond_true: Condition \"org.springframework.util.CollectionUtils.isEmpty(users)\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingAccessControlUserRepository.java"
                                       },
                                       "region": {
                                          "startLine": 34
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: return_null: Explicitly returning null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 1: Assigning: \"currentUser\" = return value from \"userRepository.findByUsername(webSession.getUserName())\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 1 (cont.): \"currentUser\" has its value checked in \"currentUser != null\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assigned: Assigning: \"user\" = \"null\" return value from \"findByUsername\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: dereference: Dereferencing a pointer that might be \"null\" \"user\" when calling \"DisplayUser\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: method_call: Calling method on \"user\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "0aa1c78b4cf56090807d13fa056265511b6fa71c5f104f6aaf0eff49c145eea6"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10004)\nCalling a method on null object \"errors.getFieldError(\"username\")\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"getFieldError\" returns \"null\" (checked 0 out of 2 times). (The virtual call resolves to \"org.springframework.validation.AbstractBindingResult.getFieldError\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/container/users/UserValidatorTest.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: null_method_call: Calling a method on null object \"errors.getFieldError(\"username\")\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                        },
                        "region": {
                           "startLine": 60
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6adfd6506deb5660a4d998498421d34e0ee79eee4cf998455992f2b15b24f474"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10141)\nCalling a method on null object \"doc.select(\"body > table > tbody > tr:nth-child(2) > td:nth-child(2)\").first()\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_false: Condition \"editor.isEmpty()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: returned_null: \"first\" returns \"null\" (checked 0 out of 2 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: null_method_call: Calling a method on null object \"doc.select(\"body > table > tbody > tr:nth-child(2) > td:nth-child(2)\").first()\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                        },
                        "region": {
                           "startLine": 58
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "192ab13a8e19c5f6c5be9ecd22cf424093b763583da4cc831ecb88818fa4aa62"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10141)\nCalling a method on null object \"doc.select(\"body > table > tbody > tr:nth-child(1) > td:nth-child(2)\").first()\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_false: Condition \"editor.isEmpty()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: returned_null: \"first\" returns \"null\" (checked 0 out of 2 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: null_method_call: Calling a method on null object \"doc.select(\"body > table > tbody > tr:nth-child(1) > td:nth-child(2)\").first()\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 13435
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "524deab719fcb6fb256666ef28e5e34ec1e071c89adac8afd1d940f260c297c6"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10059)\nAccessing a property of null-like value \"prevToken\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13393
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_false: Condition \"!session\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9834
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7481
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9475
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 14569
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13413
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13393
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"!session.bgTokenizer\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9833
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 1 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7473
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 2 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9474
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 3 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 14571
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13431
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_assign: Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13399
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: cond_false: Condition \"!token\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13434
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: example_checked: Example 5 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13399
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_false: Condition \"!/\\b(?:tag-open|tag-name)/.test(token.type)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13405
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"token.type.indexOf(\"tag-open\") != -1\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13407
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_false: Condition \"!token\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13415
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: cond_false: Condition \"prevToken.value == \"<\"\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13434
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: cond_false: Condition \"token\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13430
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: cond_true: Condition \"prevToken\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13430
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 10: cond_true: Condition \"depth <= 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13432
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 11: returned_null: \"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6852
                                       }
                                    },
                                    "message": {
                                       "text": "Event #11.1: cond_true: Condition \"this.$tokenIndex < 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6854
                                       }
                                    },
                                    "message": {
                                       "text": "Event #11.2: cond_true: Condition \"this.$row < 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6856
                                       }
                                    },
                                    "message": {
                                       "text": "Event #11.3: return: Explicitly returning \"null\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13432
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 12: var_assigned: Assigning \"prevToken\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13434
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 13: cond_true: Condition \"token\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13434
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 14: cond_true: Condition \"token.value === tag\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13434
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 15: cond_true: Condition \"token.type.indexOf(\"tag-name\") !== -1\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13435
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 16: property_access: Accessing a property of null-like value \"prevToken\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 13415
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "29a14a4f32b2f23ba14db4a2c39e514ccd84b0441e87751ffc5fa86e806be24e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10059)\nAccessing a property of null-like value \"prevToken\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13393
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_false: Condition \"!session\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9834
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7481
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9475
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 14569
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13413
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: example_assign: Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13393
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"!session.bgTokenizer\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9833
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 1 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 7473
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 2 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 9474
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 3 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 14571
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_checked: Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13431
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: example_assign: Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13399
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: cond_false: Condition \"!token\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13434
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: example_checked: Example 5 (cont.): \"token\" has its value checked in \"token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13399
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_false: Condition \"!/\\b(?:tag-open|tag-name)/.test(token.type)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13405
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"token.type.indexOf(\"tag-open\") != -1\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13407
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_false: Condition \"!token\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13413
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: returned_null: \"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6852
                                       }
                                    },
                                    "message": {
                                       "text": "Event #7.1: cond_true: Condition \"this.$tokenIndex < 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6854
                                       }
                                    },
                                    "message": {
                                       "text": "Event #7.2: cond_true: Condition \"this.$row < 0\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 6856
                                       }
                                    },
                                    "message": {
                                       "text": "Event #7.3: return: Explicitly returning \"null\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13413
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: var_assigned: Assigning \"prevToken\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 13415
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: property_access: Accessing a property of null-like value \"prevToken\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 187
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "5e8852f66eb2e9b72c1a5c19a201f8c47444ca78d52deb5a2bdc9a27dbc6bfce"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10021)\nCalling a method on null object \"findNodeByTitle(nodes, \"Admin lost password\")\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 187
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"findNodeByTitle\" returns \"null\" (checked 0 out of 2 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 204
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: for_loop: Iterating over another element of \"nodes\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 206
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: cond_false: Condition \"node.get(\"title\").equals(title)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 209
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.3: loop: Jumping back to the beginning of the loop."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 204
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.4: for_end: No elements left in \"nodes\", leaving loop."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 210
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.5: return_null: Explicitly returning null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 187
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: null_method_call: Calling a method on null object \"findNodeByTitle(nodes, \"Admin lost password\")\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "NULL_RETURNS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 199
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f036084f0d8b691fb1ed651798c17d761a2a7d34cd90e2f16c24b017b4561065"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10021)\nCalling a method on null object \"findNodeByTitle(nodes, \"Admin lost password\")\".\n[CWE-476](https://cwe.mitre.org/data/definitions/476.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 199
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: returned_null: \"findNodeByTitle\" returns \"null\" (checked 0 out of 2 times)."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 204
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: for_loop: Iterating over another element of \"nodes\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 206
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: cond_false: Condition \"node.get(\"title\").equals(title)\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 209
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.3: loop: Jumping back to the beginning of the loop."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 204
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.4: for_end: No elements left in \"nodes\", leaving loop."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 210
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.5: return_null: Explicitly returning null."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 199
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: null_method_call: Calling a method on null object \"findNodeByTitle(nodes, \"Admin lost password\")\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "PATH_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                        },
                        "region": {
                           "startLine": 79
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "81f36a9cb5c922108484f7a61b48211075c09f95b234eab4e74790a6476131f5"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10104)\nConstructing a path or URI using the tainted value in \"myFile.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files.\n[CWE-22](https://cwe.mitre.org/data/definitions/22.html)\nRemediation Advice: Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"importFile\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 79
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint: Calling \"getOriginalFilename\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"org.springframework.mock.web.MockMultipartFile.getOriginalFilename()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 79
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: pass: Passing \"myFile.getOriginalFilename()\" to \"File\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 79
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: path_manipulation_sink: Constructing a path or URI using the tainted value in \"myFile.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "PATH_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                        },
                        "region": {
                           "startLine": 78
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "33457cb4b17a6c7b3e2bce532a4680b109ae6d72b926c70bc4bdd6ba52ea422d"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10104)\nConstructing a path or URI using the tainted value in \"myFile.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files.\n[CWE-22](https://cwe.mitre.org/data/definitions/22.html)\nRemediation Advice: Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"importFile\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint: Calling \"getOriginalFilename\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"org.springframework.mock.web.MockMultipartFile.getOriginalFilename()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: pass: Passing \"myFile.getOriginalFilename()\" to \"File\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: path_manipulation_sink: Constructing a path or URI using the tainted value in \"myFile.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "PATH_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java"
                        },
                        "region": {
                           "startLine": 39
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f9e07b1870e78cf6e7a09ea1b7b7b41a614f8b0b08c68bd0d2d9df458568e869"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10095)\nCalling \"execute\". This call uses \"fullName\" for sensitive computation.\n[CWE-22](https://cwe.mitre.org/data/definitions/22.html)\nRemediation Advice: Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java"
                                       },
                                       "region": {
                                          "startLine": 36
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"uploadFileHandler\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java"
                                       },
                                       "region": {
                                          "startLine": 36
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"fullName\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java"
                                       },
                                       "region": {
                                          "startLine": 39
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"execute\". This call uses \"fullName\" for sensitive computation."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: pass: Passing \"fullName\" to \"File\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                                       },
                                       "region": {
                                          "startLine": 42
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: path_manipulation_sink: Constructing a path or URI using the tainted value in \"fullName\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "PATH_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                        },
                        "region": {
                           "startLine": 66
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "831f1da269106205e585f00215b4aa876cb0538387aef0287bd4c96e59ba49c7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10005)\nConstructing a path or URI using the tainted value in \"file.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files.\n[CWE-22](https://cwe.mitre.org/data/definitions/22.html)\nRemediation Advice: Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: taint: Calling \"getOriginalFilename\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"org.springframework.mock.web.MockMultipartFile.getOriginalFilename()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: pass: Passing \"file.getOriginalFilename()\" to \"resolve\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: path_manipulation_sink: Constructing a path or URI using the tainted value in \"file.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                        },
                        "region": {
                           "startLine": 71
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "944436a7399d6802af5ba772be00cb4d730536383cfd2e44058fe1d2ea33dff3"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10138)\nVariable \"in\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"requestedExecutionTime != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"requestedExecutionTime.isBefore(java.time.LocalDateTime.now().minusMinutes(10))\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: cond_false: Condition \"requestedExecutionTime.isAfter(java.time.LocalDateTime.now())\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"taskAction.startsWith(\"sleep\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"taskAction.length() < 22\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: alloc_fn: A new resource is returned from allocation method \"getInputStream\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: var_assign: Assigning: \"in\" = resource returned from \"new java.io.BufferedReader(new java.io.InputStreamReader(p.getInputStream()))\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: noescape: Resource \"in\" is not closed or saved in \"readLine\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: cond_false: Condition \"(line = in.readLine()) != null\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 10: leaked_resource: Variable \"in\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                        },
                        "region": {
                           "startLine": 85
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "cbdc4b10d0b06fa3a0dcf1b84223403e697e6f731339d63713a1fe92517c0c51"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10080)\nVariable \"preparedStatement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"attackResult == null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: cond_false: Condition \"resultSet.next()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: var_assign: Assigning: \"preparedStatement\" = resource returned from \"connection.prepareStatement(\"INSERT INTO sql_challenge_users VALUES (?, ?, ?)\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: noescape: Resource \"preparedStatement\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: noescape: Resource \"preparedStatement\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 82
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: noescape: Resource \"preparedStatement\" is not closed or saved in \"setString\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: leaked_resource: Variable \"preparedStatement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        },
                        "region": {
                           "startLine": 87
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "84e667765a2ffe39111ba3afcea290c032dd8156b275b3b20d65285dfebd64ba"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10007)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1008)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getStatement() != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"results.first()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_true: Condition \"results.getRow() > 1\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 87
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        },
                        "region": {
                           "startLine": 98
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ebe92ef359a4ff99663e4907f418065b7ed5bd657cc78c211ddd921ccea90231"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10007)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1008)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getStatement() != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_false: Condition \"results.first()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 98
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        },
                        "region": {
                           "startLine": 93
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e10ebc693efe68d72814b2740c9d15c8d05d405515f2fee820575de374a303d7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10007)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1008)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getStatement() != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"results.first()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_false: Condition \"results.getRow() > 1\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 93
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                        },
                        "region": {
                           "startLine": 97
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a1b5e720380608cdb8603028905988225dd366937231719f14637108a0dcae26"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10124)\nVariable \"query\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"query\" = resource returned from \"connection.prepareStatement(queryString, 1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: try_fallthrough: Falling through to end of try statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: noescape: Resource \"query\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"results != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_true: Condition \"results.first() == true\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 96
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: cond_true: Condition \"results.getRow() >= 6\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 97
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: leaked_resource: Variable \"query\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                        },
                        "region": {
                           "startLine": 103
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "9d4ec8b65f0c5cf4b0157f497238f79c96a4821d1f2ca025ef3aef978dbca64b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10124)\nVariable \"query\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"query\" = resource returned from \"connection.prepareStatement(queryString, 1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: try_fallthrough: Falling through to end of try statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: noescape: Resource \"query\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"results != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_true: Condition \"results.first() == true\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 96
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: cond_false: Condition \"results.getRow() >= 6\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                                       },
                                       "region": {
                                          "startLine": 103
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: leaked_resource: Variable \"query\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                        },
                        "region": {
                           "startLine": 88
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "072c444002b99bd9905c1aeacb628048efb3950257196f56513cf673d70fdcda"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10010)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"attackResult == null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 68
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"resultSet.next()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 72
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: cond_true: Condition \"username_reg.contains(\"tom'\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: if_fallthrough: Falling through to end of if statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 77
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: if_fallthrough: Falling through to end of if statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                                       },
                                       "region": {
                                          "startLine": 88
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                        },
                        "region": {
                           "startLine": 73
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3baeefdd14a760fa11cd556979a1c81f0b024784bad337a38abe8f83ee075e77"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10056)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getString(\"department\").equals(\"Marketing\")\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 73
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                        },
                        "region": {
                           "startLine": 75
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6b6cf4b8e594f62d23ce23663a4157c902f268398508b4d94d550795eb4cf737"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10056)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_false: Condition \"results.getString(\"department\").equals(\"Marketing\")\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 75
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                        },
                        "region": {
                           "startLine": 78
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "56639e221fb7d38d4b612a3749a64e62b56f26143179d0912dce4ec0444d2a27"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10050)\nVariable \"zip\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: new_resource: \"new java.util.zip.ZipFile(uploadedZipFile.toFile())\" creates a new resource."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"zip\" = resource returned from \"new java.util.zip.ZipFile(uploadedZipFile.toFile())\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"zip\" is not closed or saved in \"entries\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_false: Condition \"entries.hasMoreElements()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: leaked_resource: Variable \"zip\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        },
                        "region": {
                           "startLine": 159
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4088c327f44c61c054570817d1ece5b853662d6f53a3c9a4fdfd7dd461525901"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10016)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 157
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 157
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1005, 1008)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 158
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeUpdate\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 159
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        },
                        "region": {
                           "startLine": 86
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ccd3eec14cbc5d0d9f77891ad99606121ec0546566bdff718f68616c73f62e22"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10130)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1005, 1008)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getStatement() != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 79
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_true: Condition \"results.first()\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: if_fallthrough: Falling through to end of if statement."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        },
                        "region": {
                           "startLine": 83
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "bb1666db1fd22b6c3b139d840e03714aef212201b764781fb220bb5add1e95d2"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10130)\nVariable \"statement\" going out of scope leaks the resource it refers to.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"createStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: var_assign: Assigning: \"statement\" = resource returned from \"connection.createStatement(1005, 1008)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"statement\" is not closed or saved in \"executeQuery\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: cond_true: Condition \"results.getStatement() != null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 79
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: cond_false: Condition \"results.first()\", taking false branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 83
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: leaked_resource: Variable \"statement\" going out of scope leaks the resource it refers to."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a26e93dd33da51faece3cc281a8f2291f41483804f6fd45c5beaa5d086d424df"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10033)\nFailing to save or close resource created by \"new java.io.FileOutputStream(new java.io.File(catPicturesDirectory, i + \".jpg\"))\" leaks it.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"i <= 10\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: new_resource: \"new java.io.FileOutputStream(new java.io.File(catPicturesDirectory, i + \".jpg\"))\" creates a new resource."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: noescape: Resource \"new java.io.FileOutputStream(new java.io.File(catPicturesDirectory, i + \".jpg\"))\" is not closed or saved in \"copy\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: leaked_resource: Failing to save or close resource created by \"new java.io.FileOutputStream(new java.io.File(catPicturesDirectory, i + \".jpg\"))\" leaks it."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RESOURCE_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5Test.java"
                        },
                        "region": {
                           "startLine": 43
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3f0639c0df03f6bd3653a7254a1e0d5e43dc119a0e3b88e14b627ee46bbd6082"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10053)\nFailing to save or close resource created by \"dataSource.getConnection().prepareStatement(\"revoke select on grant_rights from unauthorized_user cascade\")\" leaks it.\n[CWE-404](https://cwe.mitre.org/data/definitions/404.html)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5Test.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: alloc_fn: A new resource is returned from allocation method \"prepareStatement\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5Test.java"
                                       },
                                       "region": {
                                          "startLine": 43
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: leaked_resource: Failing to save or close resource created by \"dataSource.getConnection().prepareStatement(\"revoke select on grant_rights from unauthorized_user cascade\")\" leaks it."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RISKY_CRYPTO",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                        },
                        "region": {
                           "startLine": 55
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f92a76b79104613d0defbd30316b0dce0a16448f6d492668d46bb1f6ed5b4655"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10118)\nUsing a weak hashing algorithm. The RIPEMD, MD2, MD4, MD5, SHA0 and SHA1 cryptographic hashing algorithms are not collision resistant. Furthermore, these algorithms suffer from length extension attacks: without knowing the original unhashed message, an attacker can generate a valid hash for messages that have the original message as a prefix.\n[CWE-328](https://cwe.mitre.org/data/definitions/328.html)\nRemediation Advice: 1) Use a strong, well-vetted cryptographic hash function that is currently not known to suffer these weaknesses, such as a SHA-2 family hash like SHA-256.\n2) Use a hashed message authenticated code (HMAC) when comparing the output of the hash to a value provided by a user, such as to ensure a value has not been tampered with.\n3) Use a password-based key derivative function such as PBKDF2, scrypt, or bcrypt for deriving the key, when the data going into the hash functi"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: cond_true: Condition \"md5Hash == null\", taking true branch."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: risky_crypto_use: Using a weak hashing algorithm. The RIPEMD, MD2, MD4, MD5, SHA0 and SHA1 cryptographic hashing algorithms are not collision resistant. Furthermore, these algorithms suffer from length extension attacks: without knowing the original unhashed message, an attacker can generate a valid hash for messages that have the original message as a prefix."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "RISKY_CRYPTO",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                        },
                        "region": {
                           "startLine": 103
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c94082f36e271aacffa33412f5933f24dd5944b747fa2f48c28bdc6cf102a149"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10028)\nUsing a weak hashing algorithm. The RIPEMD, MD2, MD4, MD5, SHA0 and SHA1 cryptographic hashing algorithms are not collision resistant. Furthermore, these algorithms suffer from length extension attacks: without knowing the original unhashed message, an attacker can generate a valid hash for messages that have the original message as a prefix.\n[CWE-328](https://cwe.mitre.org/data/definitions/328.html)\nRemediation Advice: 1) Use a strong, well-vetted cryptographic hash function that is currently not known to suffer these weaknesses, such as a SHA-2 family hash like SHA-256.\n2) Use a hashed message authenticated code (HMAC) when comparing the output of the hash to a value provided by a user, such as to ensure a value has not been tampered with.\n3) Use a password-based key derivative function such as PBKDF2, scrypt, or bcrypt for deriving the key, when the data going into the hash functi"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 102
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: for_loop: Iterating over another element of \"org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 103
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: risky_crypto_use: Using a weak hashing algorithm. The RIPEMD, MD2, MD4, MD5, SHA0 and SHA1 cryptographic hashing algorithms are not collision resistant. Furthermore, these algorithms suffer from length extension attacks: without knowing the original unhashed message, an attacker can generate a valid hash for messages that have the original message as a prefix."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 100
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: crypto_field: \"algorithm\" specifies the algorithm in \"java.security.MessageDigest.getInstance(algorithm)\"."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 78
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "db95a73726e6f5fcd09137ef9b091701412b60597a6d07c4b9741dbccaec37fe"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10103)\nCalling \"ok\". This shows the sensitive data \"createNewTokens(user)\" in a user interface. It may be exposed to unintended individuals.\n[CWE-317](https://cwe.mitre.org/data/definitions/317.html)\nRemediation Advice: Do not leak this data to a user interface."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"follow\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sensitive_data: Calling \"createNewTokens\". This call stores sensitive data in \"<return value>.access_token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: sensitive_data: Calling \"compact\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"io.jsonwebtoken.impl.DefaultJwtBuilder.compact()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: assign: Assigning: \"tokenJson\" = \"new java.util.HashMap()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 96
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.3: return: Returning \"tokenJson\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"ok\". This shows the sensitive data \"createNewTokens(user)\" in a user interface. It may be exposed to unintended individuals."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 149
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "b06fa519ba8d99a5c3635d49b8057465a4a329101aa778bbe70cc4ca4d0ffef0"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10132)\nCalling \"ok\". This shows the sensitive data \"createNewTokens(user)\" in a user interface. It may be exposed to unintended individuals.\n[CWE-317](https://cwe.mitre.org/data/definitions/317.html)\nRemediation Advice: Do not leak this data to a user interface."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 126
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"newToken\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 149
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sensitive_data: Calling \"createNewTokens\". This call stores sensitive data in \"<return value>.access_token\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.1: sensitive_data: Calling \"compact\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"io.jsonwebtoken.impl.DefaultJwtBuilder.compact()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 91
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.2: assign: Assigning: \"tokenJson\" = \"new java.util.HashMap()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 96
                                       }
                                    },
                                    "message": {
                                       "text": "Event #2.3: return: Returning \"tokenJson\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 149
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"ok\". This shows the sensitive data \"createNewTokens(user)\" in a user interface. It may be exposed to unintended individuals."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/user/UserService.java"
                        },
                        "region": {
                           "startLine": 53
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6962a8c3ef0dec3241c717a6e48616fc8b2acf895dc37a775d05a1dbefdba97d"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10009)\nCalling \"save\". This stores the sensitive data \"new org.owasp.webgoat.webwolf.user.WebGoatUser(username, password)\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.repository.CrudRepository.save(java.lang.Object)\".)\n[CWE-313](https://cwe.mitre.org/data/definitions/313.html)\nRemediation Advice: Do not leak this data to a database."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/user/UserService.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: sensitive_data: Calling \"WebGoatUser\". This call stores sensitive data in \"password\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/user/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: assign: Assigning: \"this.password\" = \"password\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/user/WebGoatUser.java"
                                       },
                                       "region": {
                                          "startLine": 52
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: sensitive_data: Calling \"createUser\". This call stores sensitive data in \"this.password\". (The virtual call resolves to \"org.owasp.webgoat.webwolf.user.WebGoatUser.createUser()\".) Since \"this.password\" is equal to \"password\", now \"password\" contains sensitive data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/user/UserService.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: sink: Calling \"save\". This stores the sensitive data \"new org.owasp.webgoat.webwolf.user.WebGoatUser(username, password)\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.repository.CrudRepository.save(java.lang.Object)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SENSITIVE_DATA_LEAK",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                        },
                        "region": {
                           "startLine": 80
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e1cfd2304b62d733dd703132d00a2ded92cd4510d48f09404de5737bcddb6f40"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10085)\nCalling \"debug\". This logs the sensitive data \"token\" to a file or the console. It may be exposed to unintended individuals. (The virtual call resolves to \"org.slf4j.Logger.debug(java.lang.String)\".)\n[CWE-532](https://cwe.mitre.org/data/definitions/532.html)\nRemediation Advice: Do not leak this data to a log file or the console."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 75
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: sensitive_data: Calling \"compact\". This call stores sensitive data in \"<return value>\". (The virtual call resolves to \"io.jsonwebtoken.impl.DefaultJwtBuilder.compact()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 75
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: assign: Assigning: \"token\" = \"io.jsonwebtoken.Jwts.builder().setClaims(claims).signWith(io.jsonwebtoken.SignatureAlgorithm.HS512, \"bm5n3SkxCX4kKRy4\").compact()\". Now \"token\" contains sensitive data."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sink: Calling \"debug\". This logs the sensitive data \"token\" to a file or the console. It may be exposed to unintended individuals. (The virtual call resolves to \"org.slf4j.Logger.debug(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.csrf_protection_disabled",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                        },
                        "region": {
                           "startLine": 80
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3b7ee22c94132dad5da95bc61929444f9ab27c664cb753af176fbac927f3f8c5"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10036)\nThe Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled.\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Enable the Spring Security CSRF protection by omitting the invocation of `disable()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.csrf_protection_disabled",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                        },
                        "region": {
                           "startLine": 60
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "70f8593d625346c365b78ada73c6481efcf1169d82ebe32c87dbe8e0d2e65bd8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10047)\nThe Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled.\n[CWE-352](https://cwe.mitre.org/data/definitions/352.html)\nRemediation Advice: Enable the Spring Security CSRF protection by omitting the invocation of `disable()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.insufficient_asymmetric_key_size",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                        },
                        "region": {
                           "startLine": 38
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "1f6680efeb5fa84cc969755210a08dfbf2874b84ab4196a08c95701581f39627"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10067)\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks.\n[CWE-326](https://cwe.mitre.org/data/definitions/326.html)\nRemediation Advice: Modify the application to adhere to the following minimum key size requirements:\n* 3072 bit key and 283 bit modulus for Diffie-Hellman and DSA algorithms.\n* 3072 bit key for RSA algorithms.\n* 256 bit domain parameters for elliptic curve algorithms."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                                       },
                                       "region": {
                                          "startLine": 38
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_ignored_start_time",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                        },
                        "region": {
                           "startLine": 124
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "807e46525dbbb110beac1fde597b17f1254abe731bc2393d257082285302bc86"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10045)\nThe instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Verify that the token's start time is valid by invoking the `setRequireNotBefore()` method on the `JwtConsumerBuilder`, when the token should only be valid after some point in time.\nInvoke the `setAllowedClockSkewInSeconds()` method, if the application needs to tolerate a small amount of clock skew."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"
                                       },
                                       "region": {
                                          "startLine": 124
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                        },
                        "region": {
                           "startLine": 94
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4c5abd52b9844e2be03f7b5a52dcb2d463f106c9754719b9c577ad3ee0971bee"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10093)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 94
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                        },
                        "region": {
                           "startLine": 71
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "10813ba6b0e61812039d19addb6c42a1c6a986cc02ab3a9ae7b7991524001b9e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10049)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 63
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "aeb46e8983620a4c9821c1341c7fb4f8f8e45c68e9faa27681cbef2a04c64bc1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10125)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 63
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                        },
                        "region": {
                           "startLine": 134
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "0339a748aaef1575554e131f9cf21dc94f8c129345bf8bbed2d2854208b7b593"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10029)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 134
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 126
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "f922d13789f9f86e399ab002b3739704036e1c02396d67a49f02b897f3c75291"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10057)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 126
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                        },
                        "region": {
                           "startLine": 82
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e519cf7eafbbd9c50d1bb4c91c41e84cdb931fed3b7276bbc3043f9934436a16"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10086)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 82
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 246
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "7eeb61ca5bef197842275d529e0c4a91d409d8c9bb96f8d6a3a4d2da5be5628b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10092)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 246
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 228
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "cae6e89704065f4adf8a1a58efda475a116dc334d11af47b85ae38937e341fc2"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10135)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 228
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_non_expiring_token",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 81
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ba05e9055440a7a96d6601efa87c339dd45a507062cd6755a59ff8c91f6c7bac"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10062)\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n[CWE-613](https://cwe.mitre.org/data/definitions/613.html)\nRemediation Advice: Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                        },
                        "region": {
                           "startLine": 137
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6078d47c56963ada1d6e1d4b120f4115a4d4b263dac13a4ba5593e1e9ed30d0c"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10014)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 137
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 155
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "153f1c97326d247eb70f2dc23b8f90fba56d506c281dfbe758276817e40904b9"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10081)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 155
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.jwt_untrusted_decode",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                        },
                        "region": {
                           "startLine": 55
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4890708cff43c5f6197e9c08883819d76ab8b35e7e0e6966795f9555688e68b6"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10096)\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n[CWE-347](https://cwe.mitre.org/data/definitions/347.html)\nRemediation Advice: Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/TokenTest.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 218
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4b02cb8ce5e909cc26629b69bc10ea54ae6018cb15a212a01eea02f9aedb6118"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10042)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 218
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                        },
                        "region": {
                           "startLine": 135
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c55b39490682be6986bb5639439716ca7746f4e23f4dea3d1a671867a0d407c8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10003)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                                       },
                                       "region": {
                                          "startLine": 135
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignmentTest.java"
                        },
                        "region": {
                           "startLine": 83
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "09aa6e96d277291c635a02490add97ac9dce478eb1964ee2bf30c6ba048b2a37"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10142)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignmentTest.java"
                                       },
                                       "region": {
                                          "startLine": 83
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        },
                        "region": {
                           "startLine": 92
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "b81beade7ce716a735c6560c7949e50ef2bbd99bb978f7bd523bf1517cc39a9a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10128)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 92
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                        },
                        "region": {
                           "startLine": 70
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "9479a70ff58d776b9d7506f84dbd58703b63aad029d9f60673b74c18cd169def"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10072)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpointTest.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_samesite_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        },
                        "region": {
                           "startLine": 95
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "29e64665b670c97493fa3759e773c63791a1324cc6ce5c413ed4e03212288885"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10122)\nThe application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.\n[CWE-1275](https://cwe.mitre.org/data/definitions/1275.html)\nRemediation Advice: Set the `Samesite` attribute on this cookie to a safe value such as `Strict` or `Lax`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 95
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_samesite_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java"
                        },
                        "region": {
                           "startLine": 89
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "8a94953656644a87657979d95726dad97b24f390e0de2a7bad1173be9c2c22ac"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10097)\nThe application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.\n[CWE-1275](https://cwe.mitre.org/data/definitions/1275.html)\nRemediation Advice: Set the `Samesite` attribute on this cookie to a safe value such as `Strict` or `Lax`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 89
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_samesite_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        },
                        "region": {
                           "startLine": 78
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "73ee0a8a3db984c8d595eb178b546af3e7a72b6d0bc3d1e8516bbe37407c7017"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10116)\nThe application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.\n[CWE-1275](https://cwe.mitre.org/data/definitions/1275.html)\nRemediation Advice: Set the `Samesite` attribute on this cookie to a safe value such as `Strict` or `Lax`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_tls",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "coverity.conf"
                        },
                        "region": {
                           "startLine": 9
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3af475b44e57fbeec69b3ab1a7e68970bebda8cd8ab9865f8e5db04e13e647d1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10136)\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http` and `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers.\n[CWE-319](https://cwe.mitre.org/data/definitions/319.html)\nRemediation Advice: Configure the URI to use a secure protocol with TLS protections."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "coverity.conf"
                                       },
                                       "region": {
                                          "startLine": 9
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http` and `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.weak_hash",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                        },
                        "region": {
                           "startLine": 55
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "491acd350e649b78b8f5a36af1f9e05cafd8cf96928caf4067f9961dd10659da"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10037)\nThis application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks.\n[CWE-327](https://cwe.mitre.org/data/definitions/327.html)\nRemediation Advice: Use strong algorithms such as `SHA-256` to prevent collision attacks."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.weak_password_hash",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                        },
                        "region": {
                           "startLine": 106
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "06ee6ebe0c9ac7bb1fcfbdab252140ff1581c617b6c6987b9d66682942bc40ff"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10022)\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.\n[CWE-261](https://cwe.mitre.org/data/definitions/261.html)\nRemediation Advice: Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                                       },
                                       "region": {
                                          "startLine": 106
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        },
                        "region": {
                           "startLine": 60
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6100cd1b95b0c9b824fa1a67071937c3d1d18f40a0867c30ec49626fcad8e8d0"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10064)\nCalling \"injectableQueryConfidentiality\". Passing the tainted value \"auth_tan\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"auth_tan\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQueryConfidentiality\". Passing the tainted value \"auth_tan\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"auth_tan\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                        },
                        "region": {
                           "startLine": 59
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a44e9b4a66392c2beeb53cbcd786e2d838bb7531cf0121b36c2f5a593be9a3a4"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10139)\nCalling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"query\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                        },
                        "region": {
                           "startLine": 51
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "308ced2d467cf4235da581454ffe83cdab9501dd42b54250251bdfea8420282e"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10121)\nCalling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                                       },
                                       "region": {
                                          "startLine": 47
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"attack\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                                       },
                                       "region": {
                                          "startLine": 47
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"userId\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"accountName\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                        },
                        "region": {
                           "startLine": 72
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "c6a1daf39033e63433ca413fd65c6134fabad4df0e56699aa8563fd102d49066"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10024)\nCalling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"query\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 72
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                                       },
                                       "region": {
                                          "startLine": 80
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                        },
                        "region": {
                           "startLine": 58
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "616a063568e2d434cbf551e5b040e061cf57ad5e0d5b72700d0ce213c1b24793"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10039)\nCalling \"prepareStatement\". Passing the tainted value \"\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\"\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"login\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"password_login\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"password_login\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sql_sink: Calling \"prepareStatement\". Passing the tainted value \"\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\"\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        },
                        "region": {
                           "startLine": 56
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a2143ff12ee973c3688afbb2c79fc3dcea633b820b31a844bdbfdd7d51040e90"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10040)\nCalling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"account\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"account\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.1: concat: Creating a tainted string using \"accountName\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        },
                        "region": {
                           "startLine": 60
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "88038ab4f0ba7d3434a76aaed08b140bbf23206ff814fae0a4a6bc5b06c5441f"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10066)\nCalling \"injectableQueryConfidentiality\". Passing the tainted value \"name\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 59
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"name\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQueryConfidentiality\". Passing the tainted value \"name\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"name\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 65
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        },
                        "region": {
                           "startLine": 61
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "8a23277e7c8f788aa401ccfd872ae064120d3596cb2951943ab4d2a72ced4c3b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10015)\nCalling \"injectableQueryIntegrity\". Passing the tainted value \"name\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"name\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQueryIntegrity\". Passing the tainted value \"name\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"name\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        },
                        "region": {
                           "startLine": 61
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "4b189af06f5e7b77c6f0861da69fe5ca941c75ed93eb5fe6535a424dc1bcb446"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10102)\nCalling \"injectableQueryIntegrity\". Passing the tainted value \"auth_tan\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 60
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"auth_tan\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 61
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQueryIntegrity\". Passing the tainted value \"auth_tan\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"auth_tan\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                        },
                        "region": {
                           "startLine": 55
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "2551c71cbefcdbba83a9616740e4d1658a189b03a1aa1fa185fe1213fefd24db"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10133)\nCalling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson4.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"query\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson4.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                                       },
                                       "region": {
                                          "startLine": 62
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: sql_sink: Calling \"executeUpdate\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeUpdate(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                        },
                        "region": {
                           "startLine": 58
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "593b34e334861358f13c12e4482cdf7aad1f9417d911ca013f76c7fd4f2b1ff1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10111)\nCalling \"prepareStatement\". Passing the tainted value \"\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\"\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"login\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"username_login\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: concat: Creating a tainted string using \"username_login\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                                       },
                                       "region": {
                                          "startLine": 58
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sql_sink: Calling \"prepareStatement\". Passing the tainted value \"\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\"\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SQLI",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a7caed64caeca98954d99328e9c8e49a456bbcb03f5ac658ce78cd198e1452f8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10115)\nCalling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)\n[CWE-89](https://cwe.mitre.org/data/definitions/89.html)\nRemediation Advice: Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"userId\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: sql_sink: Calling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: concat: Creating a tainted string using \"accountName\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: assign: Assigning a tainted string to \"query\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                                       },
                                       "region": {
                                          "startLine": 74
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.3: sql_sink: Calling \"executeQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "TRUST_BOUNDARY_VIOLATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                        },
                        "region": {
                           "startLine": 54
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "cb9ef2cf529734b60098d92e8864cb198513464e3e8b5a0cbaa4373fb9c176c7"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10087)\nCalling \"setAttribute\" with the tainted value in \"basicAuth\". Using the tainted data \"basicAuth\" in a context that is often assumed to be trustworthy. Because trusted data may not be validated or sanitized, this data could be mistakenly used in an insecure manner.\n[CWE-501](https://cwe.mitre.org/data/definitions/501.html)\nRemediation Advice: Check the user input against a list of acceptable strings (whitelisting). If the list must be dynamic, validate that the user input corresponds to expectations."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 46
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"getBasicAuth\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint: Calling \"getUserPrincipal\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"javax.servlet.http.HttpServletRequest.getUserPrincipal()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: identity: Calling \"getName\". This call assigns \"request.getUserPrincipal()\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.security.Principal.getName()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: assign: Assigning: \"username\" = \"request.getUserPrincipal().getName()\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: identity: Calling \"getBasicAuth\". This call assigns \"username\" to \"<return value>\". Now \"<return value>\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.1: identity: Calling \"concat\". This call assigns \"username\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.concat(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.2: identity: Calling \"concat\". This call assigns \"username.concat(\":\")\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.concat(java.lang.String)\".) Now \"<heap-allocated-area>\" is equal to \"username\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.3: identity: Calling \"getBytes\". This call assigns \"username.concat(\":\").concat(password)\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.getBytes()\".) Now \"<heap-allocated-area>\" is equal to \"username\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.4: identity: Calling \"encodeToString\". This call assigns \"username.concat(\":\").concat(password).getBytes()\" to \"<return value>\". (The virtual call resolves to \"java.util.Base64.Encoder.encodeToString(byte[])\".) Now \"<heap-allocated-area>\" is equal to \"username\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 41
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.5: return: Returning \"java.util.Base64.getEncoder().encodeToString(username.concat(\":\").concat(password).getBytes())\", which is equal to a reference to \"<heap-allocated-area>\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: assign: Assigning: \"basicAuth\" = \"org.owasp.webgoat.lessons.cryptography.EncodingAssignment.getBasicAuth(username, password)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: pass: Passing \"basicAuth\" to \"setAttribute\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 54
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: trust_boundary_violation_sink: Calling \"setAttribute\" with the tainted value in \"basicAuth\". Using the tainted data \"basicAuth\" in a context that is often assumed to be trustworthy. Because trusted data may not be validated or sanitized, this data could be mistakenly used in an insecure manner."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "UNLOCKED_ACCESS",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                        },
                        "region": {
                           "startLine": 85
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "6385afdc755f6e91b0f80bd2ec45ffdf424c13a3aee5d8f5d3ad30ad2c04e4ac"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10075)\nThread-shared \"labelDebugger\" is modified in a concurrent context without any synchronization.\n[CWE-820](https://cwe.mitre.org/data/definitions/820.html)\nRemediation Advice: To avoid data races, make the data thread-local, or add locking to all the concurrent accesses to the data, including the reads."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: thread_shared_data: \"this\" is thread-shared because it has type \"org.owasp.webgoat.container.service.LabelDebugService\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: thread_shared_type: \"org.owasp.webgoat.container.service.LabelDebugService\" is thread-shared because it is annotated with \"Controller\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: thread_entry_point: \"setDebuggingStatus\" is an entry point because it is annotated with \"RequestMapping\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: thread_unsafe_modification: Thread-shared \"labelDebugger\" is modified in a concurrent context without any synchronization."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                                       },
                                       "region": {
                                          "startLine": 85
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: write: \"labelDebugger\" is modified in call to \"setEnabled\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/container/session/LabelDebugger.java"
                                       },
                                       "region": {
                                          "startLine": 40
                                       }
                                    },
                                    "message": {
                                       "text": "Event #5.1: write: \"this.enabled\" is modified."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "UNRESTRICTED_MESSAGE_TARGET",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "target/classes/webgoat/static/js/libs/ace.js"
                        },
                        "region": {
                           "startLine": 1740
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "39af6eb512f222a0e41f6d928f66ab66c8311d4023f334d7c9627296345949f2"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10084)\nCalling the function \"win.postMessage\" with a \"targetOrigin\" argument of \"\"*\"\", rather than specifying an exact URI value.\n[CWE-668](https://cwe.mitre.org/data/definitions/668.html)\nRemediation Advice: Always specify an exact target origin or \"\"/\"\", not \"\"*\"\", when sending data to other windows. Using \"\"/\"\" will implicitly restrict to the same origin."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 1728
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: assign: Assigning \"window\" to \"win\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 1740
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: pass: Passing \"\"*\"\" to \"win.postMessage\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "target/classes/webgoat/static/js/libs/ace.js"
                                       },
                                       "region": {
                                          "startLine": 1740
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: unrestricted_message_target: Calling the function \"win.postMessage\" with a \"targetOrigin\" argument of \"\"*\"\", rather than specifying an exact URI value."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "UNSAFE_DESERIALIZATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3cfb5e6dd4f554d124cd2d390e949725678a7725d691a3cbe0e1920a06994cf1"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10143)\nCalling \"ObjectInputStream\" with the tainted value in \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\". A tainted value \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\" is deserialized. This may allow an attacker to bypass security checks or execute arbitrary code.\n[CWE-502](https://cwe.mitre.org/data/definitions/502.html)\nRemediation Advice: If possible, use pure data formats such as JSON or XML to serialize and deserialize untrusted data.  Otherwise, if you must use native serialization methods, check the integrity of the data (for example with HMAC) before deserializing it."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"token\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: identity: Calling \"replace\". This call assigns \"token\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(char, char)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: identity: Calling \"replace\". This call assigns \"token.replace('-', '+')\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(char, char)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: assign: Assigning: \"b64token\" = \"token.replace('-', '+').replace('_', '/')\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: identity: Calling \"decode\". This call assigns \"b64token\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.util.Base64.Decoder.decode(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: identity: Calling \"ByteArrayInputStream\". This call assigns \"java.util.Base64.getDecoder().decode(b64token)\" to \"<storage from new>\". Now \"<storage from new>\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: pass: Passing \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\" to \"ObjectInputStream\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: unsafe_deserialization_sink: Calling \"ObjectInputStream\" with the tainted value in \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\". A tainted value \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\" is deserialized. This may allow an attacker to bypass security checks or execute arbitrary code."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "UNSAFE_DESERIALIZATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "e7eab3693fe8b9c39d5bcbb262fdccbdd8fd18b8e419f55bd293a7343d1bad8d"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10060)\nCalling \"fromXML\". This call uses \"payload\" for sensitive computation. (The virtual call resolves to \"com.thoughtworks.xstream.XStream.fromXML(java.lang.String)\".)\n[CWE-502](https://cwe.mitre.org/data/definitions/502.html)\nRemediation Advice: If possible, use pure data formats such as JSON or XML to serialize and deserialize untrusted data.  Otherwise, if you must use native serialization methods, check the integrity of the data (for example with HMAC) before deserializing it."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 40
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"completed\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 40
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"payload\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: identity: Calling \"replace\". This call assigns \"payload\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: identity: Calling \"replace\". This call assigns \"payload.replace(\"+\", \"\")\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: identity: Calling \"replace\". This call assigns \"payload.replace(\"+\", \"\").replace(\"\\r\", \"\")\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: identity: Calling \"replace\". This call assigns \"payload.replace(\"+\", \"\").replace(\"\\r\", \"\").replace(\"\\n\", \"\")\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: identity: Calling \"replace\". This call assigns \"payload.replace(\"+\", \"\").replace(\"\\r\", \"\").replace(\"\\n\", \"\").replace(\"> \", \">\")\" to \"<return value>\". Now \"<return value>\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 49
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: assign: Assigning: \"payload\" = \"payload.replace(\"+\", \"\").replace(\"\\r\", \"\").replace(\"\\n\", \"\").replace(\"> \", \">\").replace(\" <\", \"<\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: sink: Calling \"fromXML\". This call uses \"payload\" for sensitive computation. (The virtual call resolves to \"com.thoughtworks.xstream.XStream.fromXML(java.lang.String)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "URL_MANIPULATION",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                        },
                        "region": {
                           "startLine": 75
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "da018a49203604e96593741ba6d987dab2b5c2b64f4ed31aa1e50c6755f5b687"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10126)\nCalling \"fakeClickingLinkEmail\". This call uses \"host\" for sensitive computation.\n[CWE-918](https://cwe.mitre.org/data/definitions/918.html)\nRemediation Advice: URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 66
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"sendPasswordResetLink\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: taint: Calling \"getHeader\". Reading data from an HTTP header, which is considered tainted (The virtual call resolves to \"javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 70
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: assign: Assigning: \"host\" = \"request.getHeader(\"host\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 75
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sink: Calling \"fakeClickingLinkEmail\". This call uses \"host\" for sensitive computation."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 104
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.1: identity_trivial: Calling \"format\". This call returns a reference to \"<return value>\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 104
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.2: pass: Passing \"java.lang.String.format(\"http://%s/PasswordReset/reset/reset-password/%s\", host, resetLink)\" to \"exchange\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                                       },
                                       "region": {
                                          "startLine": 104
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.3: sink: Constructing a URL using the tainted value \"java.lang.String.format(\"http://%s/PasswordReset/reset/reset-password/%s\", host, resetLink)\". This may allow an attacker to access or modify critical or sensitive files, or redirect to a malicious website."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "USELESS_CALL",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLessonTest.java"
                        },
                        "region": {
                           "startLine": 69
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "91ab9aea4644d143d9a373a1ceb8c1061e9e7e63243c988c2c30aef238c9bb6a"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10101)\nCalling \"((org.owasp.webgoat.lessons.vulnerablecomponents.Contact)xstream.fromXML(strangeContact)).getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.lessons.vulnerablecomponents.ContactImpl.getFirstName\".)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLessonTest.java"
                                       },
                                       "region": {
                                          "startLine": 69
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: side_effect_free: Calling \"((org.owasp.webgoat.lessons.vulnerablecomponents.Contact)xstream.fromXML(strangeContact)).getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.lessons.vulnerablecomponents.ContactImpl.getFirstName\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/ContactImpl.java"
                                       },
                                       "region": {
                                          "startLine": 27
                                       }
                                    },
                                    "message": {
                                       "text": "Event #0.1: side_effect_free_fn: This function only appears useful for its return value."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "USELESS_CALL",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                        },
                        "region": {
                           "startLine": 64
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "0395bddd3bd0e39f28291623e60dc145d6468997de920c0f43d338ad55ca40df"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10012)\nCalling \"contact.getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.lessons.vulnerablecomponents.ContactImpl.getFirstName\".)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                                       },
                                       "region": {
                                          "startLine": 64
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: side_effect_free: Calling \"contact.getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.lessons.vulnerablecomponents.ContactImpl.getFirstName\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/ContactImpl.java"
                                       },
                                       "region": {
                                          "startLine": 27
                                       }
                                    },
                                    "message": {
                                       "text": "Event #0.1: side_effect_free_fn: This function only appears useful for its return value."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "USELESS_CALL",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/test/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLessonTest.java"
                        },
                        "region": {
                           "startLine": 81
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "0c800ff0f0cbcb4b94edb3ad12b29be264ed6fa3cfd0d53975ef6c50a94e722b"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10140)\nCalling \"((org.owasp.webgoat.lessons.vulnerablecomponents.Contact)xstream.fromXML(\"bullssjfs\")).getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.lessons.vulnerablecomponents.ContactImpl.getFirstName\".)\nRemediation Advice: "
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/test/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLessonTest.java"
                                       },
                                       "region": {
                                          "startLine": 81
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 0: side_effect_free: Calling \"((org.owasp.webgoat.lessons.vulnerablecomponents.Contact)xstream.fromXML(\"bullssjfs\")).getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.lessons.vulnerablecomponents.ContactImpl.getFirstName\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/ContactImpl.java"
                                       },
                                       "region": {
                                          "startLine": 27
                                       }
                                    },
                                    "message": {
                                       "text": "Event #0.1: side_effect_free_fn: This function only appears useful for its return value."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "WEAK_PASSWORD_HASH",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                        },
                        "region": {
                           "startLine": 72
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "0310ec29376d5e9b9b46e858cd97dd5fb0750ad2daa6ab3971d9574f91ce5401"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10019)\nCalling \"getHash\". This call uses \"secret\" for sensitive computation.\n[CWE-760](https://cwe.mitre.org/data/definitions/760.html)\nRemediation Advice: The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 46
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: taint: Calling at a later point \"getBasicAuth\". This call taints \"SECRETS\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: assign: Assigning: \"password\" = \"org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS[(new java.util.Random()).nextInt(org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS.length)]\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: taint: Calling \"getBasicAuth\". This call taints \"password\". Since \"password\" is equal to \"SECRETS\", now \"SECRETS\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 67
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: weak_salt: Hashing a password without using a salt as part of the input. If password hashes leak to an attacker, they can use readily-available hash lookup tables to recover large numbers of passwords with little effort."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 71
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: assign: Assigning: \"secret\" = \"org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS[(new java.util.Random()).nextInt(org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS.length)]\". Now \"secret\" is equal to \"SECRETS\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 72
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sink: Calling \"getHash\". This call uses \"secret\" for sensitive computation."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.1: identity: Calling \"getBytes\". This call assigns \"secret\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.2: identity_trivial: Calling \"getBytes\". This call returns a reference to \"<return value>\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 100
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.3: assign: Assigning: \"md\" = \"java.security.MessageDigest.getInstance(algorithm)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.4: crypto_field: \n* \"md\" takes \"secret.getBytes()\" as input. \n"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 102
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.5: weak_password_hash: Use of password hash with insufficient computational effort."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "WEAK_PASSWORD_HASH",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                        },
                        "region": {
                           "startLine": 103
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "ce07b8eab0146ff5d069a91c8caa9241248c6eb92db88e11f397ab41389a1eb8"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10020)\nCalling \"getHash\". This call uses \"secret\" for sensitive computation.\n[CWE-760](https://cwe.mitre.org/data/definitions/760.html)\nRemediation Advice: The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 46
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: taint: Calling at a later point \"getBasicAuth\". This call taints \"SECRETS\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: assign: Assigning: \"password\" = \"org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS[(new java.util.Random()).nextInt(org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS.length)]\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: taint: Calling \"getBasicAuth\". This call taints \"password\". Since \"password\" is equal to \"SECRETS\", now \"SECRETS\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 78
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: weak_salt: Hashing a password without using a salt as part of the input. If password hashes leak to an attacker, they can use readily-available hash lookup tables to recover large numbers of passwords with little effort."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 102
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: assign: Assigning: \"secret\" = \"org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS[secret$index]\". Now \"secret\" is equal to \"SECRETS\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                                       },
                                       "region": {
                                          "startLine": 103
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: sink: Calling \"getHash\". This call uses \"secret\" for sensitive computation."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.1: identity: Calling \"getBytes\". This call assigns \"secret\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.2: identity_trivial: Calling \"getBytes\". This call returns a reference to \"<return value>\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 100
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.3: assign: Assigning: \"md\" = \"java.security.MessageDigest.getInstance(algorithm)\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 101
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.4: crypto_field: \n* \"md\" takes \"secret.getBytes()\" as input. \n"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 102
                                       }
                                    },
                                    "message": {
                                       "text": "Event #4.5: weak_password_hash: Use of password hash with insufficient computational effort."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "WEAK_PASSWORD_HASH",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                        },
                        "region": {
                           "startLine": 57
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3968a765a91f9a61c193dfd9d08b36e3f0f60b7c08c5ceb3881d7fdfe316f6dc"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10145)\nUse of password hash with insufficient computational effort.\n[CWE-759](https://cwe.mitre.org/data/definitions/759.html)\nRemediation Advice: The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 46
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: taint: Calling at a later point \"getBasicAuth\". This call taints \"SECRETS\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 51
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.1: assign: Assigning: \"password\" = \"org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS[(new java.util.Random()).nextInt(org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS.length)]\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event #1.2: taint: Calling \"getBasicAuth\". This call taints \"password\". Since \"password\" is equal to \"SECRETS\", now \"SECRETS\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 48
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: weak_hash_no_salt: Hashing a password using a computationally cheap cryptographic hash function and no salt. If password hashes leak to an attacker, they can use readily-available hash lookup tables to recover large numbers of passwords with little effort."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 53
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: assign: Assigning: \"secret\" = \"org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS[(new java.util.Random()).nextInt(org.owasp.webgoat.lessons.cryptography.HashingAssignment.SECRETS.length)]\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 4: identity: Calling \"getBytes\". This call assigns \"secret\" to \"<return value>\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 5: identity_trivial: Calling \"getBytes\". This call returns a reference to \"<return value>\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 6: crypto_field: \n* \"java.security.MessageDigest.getInstance(\"MD5\")\" uses the MD5 algorithm. \n"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 55
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 7: assign: Assigning: \"md\" = \"java.security.MessageDigest.getInstance(\"MD5\")\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 56
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 8: crypto_field: \n* \"md\" takes \"secret.getBytes()\" as input. \n"
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 57
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 9: weak_password_hash: Use of password hash with insufficient computational effort."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XML_EXTERNAL_ENTITY",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                        },
                        "region": {
                           "startLine": 96
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "a050dd32a6c16cb37fb40e6a88fc62c4d525c744e04b825fb60e78fb96115a05"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10038)\nCalling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.lessons.xxe.CommentsCache.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service.\n[CWE-827](https://cwe.mitre.org/data/definitions/827.html)\nRemediation Advice: The recommended and strongest prevention against both external entity and entity expansion attacks is to disable DTD processing in the parser. A \"javax.xml.stream.XMLInputFactory\" instance \"xiFactory\" can be configured to disable DTD processing by calling \"xiFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)\"."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 87
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"addComment\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 87
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"commentStr\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 96
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: xml_processor_sink: Calling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.lessons.xxe.CommentsCache.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                                       },
                                       "region": {
                                          "startLine": 105
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: identity: Calling \"StringReader\". This call assigns \"xml\" to \"<storage from new>\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                                       },
                                       "region": {
                                          "startLine": 105
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: xml_processor_sink: Calling \"createXMLStreamReader\". Passing the tainted value \"new java.io.StringReader(xml)\" to a weakly configured XML parser. (The virtual call resolves to \"javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.Reader)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "XML_EXTERNAL_ENTITY",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                        },
                        "region": {
                           "startLine": 76
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "41b0d4632372602bd2add6175e311347868a7c66bd5f75ca422bfbd36cab2f56"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10026)\nCalling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.lessons.xxe.CommentsCache.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service.\n[CWE-827](https://cwe.mitre.org/data/definitions/827.html)\nRemediation Advice: The recommended and strongest prevention against both external entity and entity expansion attacks is to disable DTD processing in the parser. A \"javax.xml.stream.XMLInputFactory\" instance \"xiFactory\" can be configured to disable DTD processing by calling \"xiFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)\"."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                                       },
                                       "region": {
                                          "startLine": 73
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: entry_point: \"createNewComment\" is an entry point function."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                                       },
                                       "region": {
                                          "startLine": 73
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 2: argument_taint: The \"commentStr\" is tainted."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                                       },
                                       "region": {
                                          "startLine": 76
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 3: xml_processor_sink: Calling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.lessons.xxe.CommentsCache.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                                       },
                                       "region": {
                                          "startLine": 105
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.1: identity: Calling \"StringReader\". This call assigns \"xml\" to \"<storage from new>\"."
                                    }
                                 }
                              },
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                                       },
                                       "region": {
                                          "startLine": 105
                                       }
                                    },
                                    "message": {
                                       "text": "Event #3.2: xml_processor_sink: Calling \"createXMLStreamReader\". Passing the tainted value \"new java.io.StringReader(xml)\" to a weakly configured XML parser. (The virtual call resolves to \"javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.Reader)\".)"
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            },
            {
               "ruleId": "SIGMA.missing_httponly_attribute",
               "locations": [
                  {
                     "physicalLocation": {
                        "artifactLocation": {
                           "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java"
                        },
                        "region": {
                           "startLine": 86
                        }
                     }
                  }
               ],
               "partialFingerprints": {
                  "primaryLocationLineHash": "3364f7918fae035bbc06b7b5f9e29a335016d742e2ac8ee6c4df145d3cf9abf3"
               },
               "message": {
                  "text": "[See in Coverity](https://poc379.coverity.synopsys.com/query/defects.htm?project=WebGoat-opt&cid=10001)\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n[CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\nRemediation Advice: Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."
               },
               "codeFlows": [
                  {
                     "threadFlows": [
                        {
                           "locations": [
                              {
                                 "location": {
                                    "physicalLocation": {
                                       "artifactLocation": {
                                          "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java"
                                       },
                                       "region": {
                                          "startLine": 86
                                       }
                                    },
                                    "message": {
                                       "text": "Event Set 1: Sigma main event: The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                                    }
                                 }
                              }
                           ]
                        }
                     ]
                  }
               ]
            }
         ],
         "tool": {
            "driver": {
               "name": "CNC",
               "informationUri": "https://poc379.coverity.synopsys.com",
               "version": "0.0.3",
               "organization": "Synopsys",
               "rules": [
                  {
                     "id": "COPY_PASTE_ERROR",
                     "name": "Copy-paste error",
                     "shortDescription": {
                        "text": "COPY_PASTE_ERROR"
                     },
                     "fullDescription": {
                        "text": "A copied piece of code is inconsistent with the original",
                        "markdown": "A copied piece of code is inconsistent with the original"
                     },
                     "help": {
                        "text": "A copied piece of code is inconsistent with the original",
                        "markdown": "A copied piece of code is inconsistent with the original"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-398"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "CSRF",
                     "name": "Cross-site request forgery",
                     "shortDescription": {
                        "text": "CSRF"
                     },
                     "fullDescription": {
                        "text": "The web application controller modifies data or state and is unprotected from cross-site request forgery.",
                        "markdown": "The web application controller modifies data or state and is unprotected from cross-site request forgery."
                     },
                     "help": {
                        "text": "The web application controller modifies data or state and is unprotected from cross-site request forgery.",
                        "markdown": "The web application controller modifies data or state and is unprotected from cross-site request forgery."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-352"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "DEADCODE",
                     "name": "Logically dead code",
                     "shortDescription": {
                        "text": "DEADCODE"
                     },
                     "fullDescription": {
                        "text": "Code can never be reached because of a logical contradiction",
                        "markdown": "Code can never be reached because of a logical contradiction"
                     },
                     "help": {
                        "text": "Code can never be reached because of a logical contradiction",
                        "markdown": "Code can never be reached because of a logical contradiction"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-561"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "DOM_XSS",
                     "name": "DOM-based cross-site scripting",
                     "shortDescription": {
                        "text": "DOM_XSS"
                     },
                     "fullDescription": {
                        "text": "Untrusted user-supplied data is inserted into a context that can execute JavaScript.",
                        "markdown": "Untrusted user-supplied data is inserted into a context that can execute JavaScript."
                     },
                     "help": {
                        "text": "Untrusted user-supplied data is inserted into a context that can execute JavaScript.",
                        "markdown": "Untrusted user-supplied data is inserted into a context that can execute JavaScript."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-79"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "FORWARD_NULL",
                     "name": "Dereference after null check",
                     "shortDescription": {
                        "text": "FORWARD_NULL"
                     },
                     "fullDescription": {
                        "text": "Reference is checked against null but then dereferenced anyway",
                        "markdown": "Reference is checked against null but then dereferenced anyway"
                     },
                     "help": {
                        "text": "Reference is checked against null but then dereferenced anyway",
                        "markdown": "Reference is checked against null but then dereferenced anyway"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-476"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "HARDCODED_CREDENTIALS",
                     "name": "Use of hard-coded password",
                     "shortDescription": {
                        "text": "HARDCODED_CREDENTIALS"
                     },
                     "fullDescription": {
                        "text": "A password is stored directly in the source code.",
                        "markdown": "A password is stored directly in the source code."
                     },
                     "help": {
                        "text": "A password is stored directly in the source code.",
                        "markdown": "A password is stored directly in the source code."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-259"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "HIBERNATE_BAD_HASHCODE",
                     "name": "Unsafe dependence on database key",
                     "shortDescription": {
                        "text": "HIBERNATE_BAD_HASHCODE"
                     },
                     "fullDescription": {
                        "text": "The result of hashCode() depends on an entity&#39;s primary database key",
                        "markdown": "The result of hashCode() depends on an entity&#39;s primary database key"
                     },
                     "help": {
                        "text": "The result of hashCode() depends on an entity&#39;s primary database key",
                        "markdown": "The result of hashCode() depends on an entity&#39;s primary database key"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "INSECURE_COMMUNICATION",
                     "name": "Plaintext communication",
                     "shortDescription": {
                        "text": "INSECURE_COMMUNICATION"
                     },
                     "fullDescription": {
                        "text": "The application is connecting to end points over a plaintext connection.",
                        "markdown": "The application is connecting to end points over a plaintext connection."
                     },
                     "help": {
                        "text": "The application is connecting to end points over a plaintext connection.",
                        "markdown": "The application is connecting to end points over a plaintext connection."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-319"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "INSECURE_RANDOM",
                     "name": "Insecure random value used in security context",
                     "shortDescription": {
                        "text": "INSECURE_RANDOM"
                     },
                     "fullDescription": {
                        "text": "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context",
                        "markdown": "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
                     },
                     "help": {
                        "text": "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context",
                        "markdown": "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-330"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "MISSING_BREAK",
                     "name": "Missing break in switch",
                     "shortDescription": {
                        "text": "MISSING_BREAK"
                     },
                     "fullDescription": {
                        "text": "Missing break statement between cases in switch statement",
                        "markdown": "Missing break statement between cases in switch statement"
                     },
                     "help": {
                        "text": "Missing break statement between cases in switch statement",
                        "markdown": "Missing break statement between cases in switch statement"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-484"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "NO_EFFECT",
                     "name": "Expression with no effect",
                     "shortDescription": {
                        "text": "NO_EFFECT"
                     },
                     "fullDescription": {
                        "text": "An expression is useless because it has no side effects and its result is ignored.",
                        "markdown": "An expression is useless because it has no side effects and its result is ignored."
                     },
                     "help": {
                        "text": "An expression is useless because it has no side effects and its result is ignored.",
                        "markdown": "An expression is useless because it has no side effects and its result is ignored."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-398"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "NULL_RETURNS",
                     "name": "Dereference null return value",
                     "shortDescription": {
                        "text": "NULL_RETURNS"
                     },
                     "fullDescription": {
                        "text": "Return value of function which returns null is dereferenced without checking",
                        "markdown": "Return value of function which returns null is dereferenced without checking"
                     },
                     "help": {
                        "text": "Return value of function which returns null is dereferenced without checking",
                        "markdown": "Return value of function which returns null is dereferenced without checking"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-476"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "PATH_MANIPULATION",
                     "name": "Filesystem path, filename, or URI manipulation",
                     "shortDescription": {
                        "text": "PATH_MANIPULATION"
                     },
                     "fullDescription": {
                        "text": "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier).",
                        "markdown": "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
                     },
                     "help": {
                        "text": "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier).",
                        "markdown": "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-22"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "REGEX_CONFUSION",
                     "name": "Unintended regular expression",
                     "shortDescription": {
                        "text": "REGEX_CONFUSION"
                     },
                     "fullDescription": {
                        "text": "A string intended to be matched literally is instead treated as a regular expression, changing its meaning.",
                        "markdown": "A string intended to be matched literally is instead treated as a regular expression, changing its meaning."
                     },
                     "help": {
                        "text": "A string intended to be matched literally is instead treated as a regular expression, changing its meaning.",
                        "markdown": "A string intended to be matched literally is instead treated as a regular expression, changing its meaning."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-185"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "RESOURCE_LEAK",
                     "name": "Resource leak",
                     "shortDescription": {
                        "text": "RESOURCE_LEAK"
                     },
                     "fullDescription": {
                        "text": "Leak of a system resource",
                        "markdown": "Leak of a system resource"
                     },
                     "help": {
                        "text": "Leak of a system resource",
                        "markdown": "Leak of a system resource"
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "Security",
                           "external/cwe/cwe-404"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "SENSITIVE_DATA_LEAK",
                     "name": "Cleartext sensitive data in a database",
                     "shortDescription": {
                        "text": "SENSITIVE_DATA_LEAK"
                     },
                     "fullDescription": {
                        "text": "Storing unencrypted sensitive data to a database.",
                        "markdown": "Storing unencrypted sensitive data to a database."
                     },
                     "help": {
                        "text": "Storing unencrypted sensitive data to a database.",
                        "markdown": "Storing unencrypted sensitive data to a database."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-313"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "SIGMA.container_running_as_root",
                     "name": "Container running as root",
                     "shortDescription": {
                        "text": "SIGMA.container_running_as_root"
                     },
                     "fullDescription": {
                        "text": "The Docker container is configured to run as the root user.",
                        "markdown": "The Docker container is configured to run as the root user."
                     },
                     "help": {
                        "text": "The Docker container is configured to run as the root user.",
                        "markdown": "The Docker container is configured to run as the root user."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-269"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.excessive_session_lifetime",
                     "name": "Excessive session lifetime",
                     "shortDescription": {
                        "text": "SIGMA.excessive_session_lifetime"
                     },
                     "fullDescription": {
                        "text": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session.",
                        "markdown": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
                     },
                     "help": {
                        "text": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session.",
                        "markdown": "The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-613"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.jwt_ignored_expiration_time",
                     "name": "JSON Web Token expiration time ignored",
                     "shortDescription": {
                        "text": "SIGMA.jwt_ignored_expiration_time"
                     },
                     "fullDescription": {
                        "text": "The instance of &#96;JwtConsumerBuilder&#96; ignores the expiration time by default, unless the &#96;setRequireExpirationTime()&#96; function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token.",
                        "markdown": "The instance of &#96;JwtConsumerBuilder&#96; ignores the expiration time by default, unless the &#96;setRequireExpirationTime()&#96; function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."
                     },
                     "help": {
                        "text": "The instance of &#96;JwtConsumerBuilder&#96; ignores the expiration time by default, unless the &#96;setRequireExpirationTime()&#96; function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token.",
                        "markdown": "The instance of &#96;JwtConsumerBuilder&#96; ignores the expiration time by default, unless the &#96;setRequireExpirationTime()&#96; function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-613"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "SIGMA.jwt_no_claims_validation",
                     "name": "JSON Web Token decoded without claims verification",
                     "shortDescription": {
                        "text": "SIGMA.jwt_no_claims_validation"
                     },
                     "fullDescription": {
                        "text": "The application invokes &#96;setSkipAllValidators&#96;, &#96;setSkipDefaultAudienceValidation&#96; or &#96;setSkipAllDefaultValidators&#96; to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios.",
                        "markdown": "The application invokes &#96;setSkipAllValidators&#96;, &#96;setSkipDefaultAudienceValidation&#96; or &#96;setSkipAllDefaultValidators&#96; to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."
                     },
                     "help": {
                        "text": "The application invokes &#96;setSkipAllValidators&#96;, &#96;setSkipDefaultAudienceValidation&#96; or &#96;setSkipAllDefaultValidators&#96; to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios.",
                        "markdown": "The application invokes &#96;setSkipAllValidators&#96;, &#96;setSkipDefaultAudienceValidation&#96; or &#96;setSkipAllDefaultValidators&#96; to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-345"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.jwt_non_expiring_token",
                     "name": "JSON Web Token without expiration time",
                     "shortDescription": {
                        "text": "SIGMA.jwt_non_expiring_token"
                     },
                     "fullDescription": {
                        "text": "The instance of &#96;JwtBuilder&#96; doesn&#39;t set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.",
                        "markdown": "The instance of &#96;JwtBuilder&#96; doesn&#39;t set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                     },
                     "help": {
                        "text": "The instance of &#96;JwtBuilder&#96; doesn&#39;t set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.",
                        "markdown": "The instance of &#96;JwtBuilder&#96; doesn&#39;t set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-613"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "SIGMA.jwt_untrusted_decode",
                     "name": "JSON Web Token decoded without signature verification",
                     "shortDescription": {
                        "text": "SIGMA.jwt_untrusted_decode"
                     },
                     "fullDescription": {
                        "text": "The application uses the &#96;io.jsonwebtoken.JwtParser&#96; package&#39;s &#96;parse()&#96;, &#96;parsePlaintextJwt()&#96;, or &#96;parseClaimsJwt()&#96; method to parse a JWT without first verifying the token&#39;s signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.",
                        "markdown": "The application uses the &#96;io.jsonwebtoken.JwtParser&#96; package&#39;s &#96;parse()&#96;, &#96;parsePlaintextJwt()&#96;, or &#96;parseClaimsJwt()&#96; method to parse a JWT without first verifying the token&#39;s signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                     },
                     "help": {
                        "text": "The application uses the &#96;io.jsonwebtoken.JwtParser&#96; package&#39;s &#96;parse()&#96;, &#96;parsePlaintextJwt()&#96;, or &#96;parseClaimsJwt()&#96; method to parse a JWT without first verifying the token&#39;s signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.",
                        "markdown": "The application uses the &#96;io.jsonwebtoken.JwtParser&#96; package&#39;s &#96;parse()&#96;, &#96;parsePlaintextJwt()&#96;, or &#96;parseClaimsJwt()&#96; method to parse a JWT without first verifying the token&#39;s signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-347"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "SIGMA.missing_httponly_attribute",
                     "name": "HttpOnly attribute not set for cookie",
                     "shortDescription": {
                        "text": "SIGMA.missing_httponly_attribute"
                     },
                     "fullDescription": {
                        "text": "The &#96;HttpOnly&#96; flag is not enabled for cookies.\nEnabling the &#96;HttpOnly&#96; flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.",
                        "markdown": "The &#96;HttpOnly&#96; flag is not enabled for cookies.\nEnabling the &#96;HttpOnly&#96; flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                     },
                     "help": {
                        "text": "The &#96;HttpOnly&#96; flag is not enabled for cookies.\nEnabling the &#96;HttpOnly&#96; flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.",
                        "markdown": "The &#96;HttpOnly&#96; flag is not enabled for cookies.\nEnabling the &#96;HttpOnly&#96; flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-1004"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.missing_samesite_attribute",
                     "name": "Missing or insecure samesite attribute for cookie",
                     "shortDescription": {
                        "text": "SIGMA.missing_samesite_attribute"
                     },
                     "fullDescription": {
                        "text": "The application returns a &#96;Set-Cookie&#96; HTTP response header without the &#96;SameSite&#96; attribute. As a result, the client will use the default value which, in older browsers, is the insecure value &#96;None&#96;. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.",
                        "markdown": "The application returns a &#96;Set-Cookie&#96; HTTP response header without the &#96;SameSite&#96; attribute. As a result, the client will use the default value which, in older browsers, is the insecure value &#96;None&#96;. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."
                     },
                     "help": {
                        "text": "The application returns a &#96;Set-Cookie&#96; HTTP response header without the &#96;SameSite&#96; attribute. As a result, the client will use the default value which, in older browsers, is the insecure value &#96;None&#96;. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.",
                        "markdown": "The application returns a &#96;Set-Cookie&#96; HTTP response header without the &#96;SameSite&#96; attribute. As a result, the client will use the default value which, in older browsers, is the insecure value &#96;None&#96;. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-1275"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.verbose_error_message",
                     "name": "Verbose error message",
                     "shortDescription": {
                        "text": "SIGMA.verbose_error_message"
                     },
                     "fullDescription": {
                        "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.",
                        "markdown": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                     },
                     "help": {
                        "text": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.",
                        "markdown": "The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-209"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.weak_password_hash",
                     "name": "Weak password hash algorithm",
                     "shortDescription": {
                        "text": "SIGMA.weak_password_hash"
                     },
                     "fullDescription": {
                        "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.",
                        "markdown": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
                     },
                     "help": {
                        "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.",
                        "markdown": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-261"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SQLI",
                     "name": "SQL injection",
                     "shortDescription": {
                        "text": "SQLI"
                     },
                     "fullDescription": {
                        "text": "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering.",
                        "markdown": "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
                     },
                     "help": {
                        "text": "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering.",
                        "markdown": "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-89"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "UNLOCKED_ACCESS",
                     "name": "Unlocked write",
                     "shortDescription": {
                        "text": "UNLOCKED_ACCESS"
                     },
                     "fullDescription": {
                        "text": "Attempt to write a shared variable without holding a lock.",
                        "markdown": "Attempt to write a shared variable without holding a lock."
                     },
                     "help": {
                        "text": "Attempt to write a shared variable without holding a lock.",
                        "markdown": "Attempt to write a shared variable without holding a lock."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality",
                           "external/cwe/cwe-820"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "URL_MANIPULATION",
                     "name": "URL manipulation",
                     "shortDescription": {
                        "text": "URL_MANIPULATION"
                     },
                     "fullDescription": {
                        "text": "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website.",
                        "markdown": "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
                     },
                     "help": {
                        "text": "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website.",
                        "markdown": "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-918"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "WEAK_PASSWORD_HASH",
                     "name": "Hashing a password with a weak hash function",
                     "shortDescription": {
                        "text": "WEAK_PASSWORD_HASH"
                     },
                     "fullDescription": {
                        "text": "Hashing a password using a scheme that is not computationally intensive.",
                        "markdown": "Hashing a password using a scheme that is not computationally intensive."
                     },
                     "help": {
                        "text": "Hashing a password using a scheme that is not computationally intensive.",
                        "markdown": "Hashing a password using a scheme that is not computationally intensive."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-916"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "XML_EXTERNAL_ENTITY",
                     "name": "Unrestricted document type definitions",
                     "shortDescription": {
                        "text": "XML_EXTERNAL_ENTITY"
                     },
                     "fullDescription": {
                        "text": "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser.",
                        "markdown": "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."
                     },
                     "help": {
                        "text": "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser.",
                        "markdown": "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-827"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "XSS",
                     "name": "Cross-site scripting",
                     "shortDescription": {
                        "text": "XSS"
                     },
                     "fullDescription": {
                        "text": "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering.",
                        "markdown": "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
                     },
                     "help": {
                        "text": "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering.",
                        "markdown": "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-79"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "RISKY_CRYPTO",
                     "name": "Risky cryptographic hashing function",
                     "shortDescription": {
                        "text": "RISKY_CRYPTO"
                     },
                     "fullDescription": {
                        "text": "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks.",
                        "markdown": "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
                     },
                     "help": {
                        "text": "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks.",
                        "markdown": "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-328"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  },
                  {
                     "id": "SIGMA.csrf_protection_disabled",
                     "name": "CSRF protection is disabled",
                     "shortDescription": {
                        "text": "SIGMA.csrf_protection_disabled"
                     },
                     "fullDescription": {
                        "text": "The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled.",
                        "markdown": "The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."
                     },
                     "help": {
                        "text": "The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled.",
                        "markdown": "The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-352"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.insufficient_asymmetric_key_size",
                     "name": "Insufficient Asymmetric Key Size",
                     "shortDescription": {
                        "text": "SIGMA.insufficient_asymmetric_key_size"
                     },
                     "fullDescription": {
                        "text": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks.",
                        "markdown": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
                     },
                     "help": {
                        "text": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks.",
                        "markdown": "The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-326"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.jwt_ignored_start_time",
                     "name": "JSON Web Token not before time ignored",
                     "shortDescription": {
                        "text": "SIGMA.jwt_ignored_start_time"
                     },
                     "fullDescription": {
                        "text": "The instance of &#96;JwtConsumerBuilder&#96; ignores the not-before time by default. When the verified JWT contains the &#96;nbd&#96; field, the &#96;setRequireNotBefore()&#96; method should be invoked explicitly to verify the token&#39;s not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource.",
                        "markdown": "The instance of &#96;JwtConsumerBuilder&#96; ignores the not-before time by default. When the verified JWT contains the &#96;nbd&#96; field, the &#96;setRequireNotBefore()&#96; method should be invoked explicitly to verify the token&#39;s not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."
                     },
                     "help": {
                        "text": "The instance of &#96;JwtConsumerBuilder&#96; ignores the not-before time by default. When the verified JWT contains the &#96;nbd&#96; field, the &#96;setRequireNotBefore()&#96; method should be invoked explicitly to verify the token&#39;s not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource.",
                        "markdown": "The instance of &#96;JwtConsumerBuilder&#96; ignores the not-before time by default. When the verified JWT contains the &#96;nbd&#96; field, the &#96;setRequireNotBefore()&#96; method should be invoked explicitly to verify the token&#39;s not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-613"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.missing_tls",
                     "name": "Missing TLS",
                     "shortDescription": {
                        "text": "SIGMA.missing_tls"
                     },
                     "fullDescription": {
                        "text": "The application is configured to use a URI with an unencrypted protocol such as &#96;ftp&#96;, &#96;http&#96; and &#96;ws&#96;. Sensitive data transmitted over insecure communication channels can be read and modified by attackers.",
                        "markdown": "The application is configured to use a URI with an unencrypted protocol such as &#96;ftp&#96;, &#96;http&#96; and &#96;ws&#96;. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
                     },
                     "help": {
                        "text": "The application is configured to use a URI with an unencrypted protocol such as &#96;ftp&#96;, &#96;http&#96; and &#96;ws&#96;. Sensitive data transmitted over insecure communication channels can be read and modified by attackers.",
                        "markdown": "The application is configured to use a URI with an unencrypted protocol such as &#96;ftp&#96;, &#96;http&#96; and &#96;ws&#96;. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-319"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "SIGMA.weak_hash",
                     "name": "Weak hash algorithm",
                     "shortDescription": {
                        "text": "SIGMA.weak_hash"
                     },
                     "fullDescription": {
                        "text": "This application uses a weak algorithm to create a &#96;MessageDigest&#96;, which may lead to collision attacks.",
                        "markdown": "This application uses a weak algorithm to create a &#96;MessageDigest&#96;, which may lead to collision attacks."
                     },
                     "help": {
                        "text": "This application uses a weak algorithm to create a &#96;MessageDigest&#96;, which may lead to collision attacks.",
                        "markdown": "This application uses a weak algorithm to create a &#96;MessageDigest&#96;, which may lead to collision attacks."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-327"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "TRUST_BOUNDARY_VIOLATION",
                     "name": "Trust boundary violation",
                     "shortDescription": {
                        "text": "TRUST_BOUNDARY_VIOLATION"
                     },
                     "fullDescription": {
                        "text": "A user-controllable string is stored in a trusted data structure.",
                        "markdown": "A user-controllable string is stored in a trusted data structure."
                     },
                     "help": {
                        "text": "A user-controllable string is stored in a trusted data structure.",
                        "markdown": "A user-controllable string is stored in a trusted data structure."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-501"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "UNRESTRICTED_MESSAGE_TARGET",
                     "name": "Unrestricted target for cross-origin message",
                     "shortDescription": {
                        "text": "UNRESTRICTED_MESSAGE_TARGET"
                     },
                     "fullDescription": {
                        "text": "Sending a cross-origin message without restricting the origin that can receive it.",
                        "markdown": "Sending a cross-origin message without restricting the origin that can receive it."
                     },
                     "help": {
                        "text": "Sending a cross-origin message without restricting the origin that can receive it.",
                        "markdown": "Sending a cross-origin message without restricting the origin that can receive it."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-668"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "note"
                     }
                  },
                  {
                     "id": "UNSAFE_DESERIALIZATION",
                     "name": "Unsafe deserialization",
                     "shortDescription": {
                        "text": "UNSAFE_DESERIALIZATION"
                     },
                     "fullDescription": {
                        "text": "A user-controllable string is deserialized.",
                        "markdown": "A user-controllable string is deserialized."
                     },
                     "help": {
                        "text": "A user-controllable string is deserialized.",
                        "markdown": "A user-controllable string is deserialized."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Security",
                           "external/cwe/cwe-502"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "error"
                     }
                  },
                  {
                     "id": "USELESS_CALL",
                     "name": "Useless call",
                     "shortDescription": {
                        "text": "USELESS_CALL"
                     },
                     "fullDescription": {
                        "text": "A function is called that is only useful for its return value, and this value is ignored.",
                        "markdown": "A function is called that is only useful for its return value, and this value is ignored."
                     },
                     "help": {
                        "text": "A function is called that is only useful for its return value, and this value is ignored.",
                        "markdown": "A function is called that is only useful for its return value, and this value is ignored."
                     },
                     "properties": {
                        "security-severity": "6.8",
                        "tags": [
                           "Quality"
                        ]
                     },
                     "defaultConfiguration": {
                        "level": "warning"
                     }
                  }
               ]
            }
         }
      }
   ]
}